{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "817cc1b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1f7a64e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv('bigdatamart_Train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d11203e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1=pd.read_csv('bigdatamart_Test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "267fdec5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FDA15</td>\n",
       "      <td>9.300</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016047</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3735.1380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>DRC01</td>\n",
       "      <td>5.920</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.019278</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>443.4228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FDN15</td>\n",
       "      <td>17.500</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016760</td>\n",
       "      <td>Meat</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2097.2700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FDX07</td>\n",
       "      <td>19.200</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Fruits and Vegetables</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>732.3800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NCD19</td>\n",
       "      <td>8.930</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Household</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>994.7052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8518</th>\n",
       "      <td>FDF22</td>\n",
       "      <td>6.865</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.056783</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>214.5218</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2778.3834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8519</th>\n",
       "      <td>FDS36</td>\n",
       "      <td>8.380</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.046982</td>\n",
       "      <td>Baking Goods</td>\n",
       "      <td>108.1570</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>549.2850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8520</th>\n",
       "      <td>NCJ29</td>\n",
       "      <td>10.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.035186</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>85.1224</td>\n",
       "      <td>OUT035</td>\n",
       "      <td>2004</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>1193.1136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8521</th>\n",
       "      <td>FDN46</td>\n",
       "      <td>7.210</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.145221</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>103.1332</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>1845.5976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8522</th>\n",
       "      <td>DRG01</td>\n",
       "      <td>14.800</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.044878</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>75.4670</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>765.6700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8523 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0              FDA15        9.300          Low Fat         0.016047   \n",
       "1              DRC01        5.920          Regular         0.019278   \n",
       "2              FDN15       17.500          Low Fat         0.016760   \n",
       "3              FDX07       19.200          Regular         0.000000   \n",
       "4              NCD19        8.930          Low Fat         0.000000   \n",
       "...              ...          ...              ...              ...   \n",
       "8518           FDF22        6.865          Low Fat         0.056783   \n",
       "8519           FDS36        8.380          Regular         0.046982   \n",
       "8520           NCJ29       10.600          Low Fat         0.035186   \n",
       "8521           FDN46        7.210          Regular         0.145221   \n",
       "8522           DRG01       14.800          Low Fat         0.044878   \n",
       "\n",
       "                  Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0                     Dairy  249.8092            OUT049   \n",
       "1               Soft Drinks   48.2692            OUT018   \n",
       "2                      Meat  141.6180            OUT049   \n",
       "3     Fruits and Vegetables  182.0950            OUT010   \n",
       "4                 Household   53.8614            OUT013   \n",
       "...                     ...       ...               ...   \n",
       "8518            Snack Foods  214.5218            OUT013   \n",
       "8519           Baking Goods  108.1570            OUT045   \n",
       "8520     Health and Hygiene   85.1224            OUT035   \n",
       "8521            Snack Foods  103.1332            OUT018   \n",
       "8522            Soft Drinks   75.4670            OUT046   \n",
       "\n",
       "      Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                          1999      Medium               Tier 1   \n",
       "1                          2009      Medium               Tier 3   \n",
       "2                          1999      Medium               Tier 1   \n",
       "3                          1998         NaN               Tier 3   \n",
       "4                          1987        High               Tier 3   \n",
       "...                         ...         ...                  ...   \n",
       "8518                       1987        High               Tier 3   \n",
       "8519                       2002         NaN               Tier 2   \n",
       "8520                       2004       Small               Tier 2   \n",
       "8521                       2009      Medium               Tier 3   \n",
       "8522                       1997       Small               Tier 1   \n",
       "\n",
       "            Outlet_Type  Item_Outlet_Sales  \n",
       "0     Supermarket Type1          3735.1380  \n",
       "1     Supermarket Type2           443.4228  \n",
       "2     Supermarket Type1          2097.2700  \n",
       "3         Grocery Store           732.3800  \n",
       "4     Supermarket Type1           994.7052  \n",
       "...                 ...                ...  \n",
       "8518  Supermarket Type1          2778.3834  \n",
       "8519  Supermarket Type1           549.2850  \n",
       "8520  Supermarket Type1          1193.1136  \n",
       "8521  Supermarket Type2          1845.5976  \n",
       "8522  Supermarket Type1           765.6700  \n",
       "\n",
       "[8523 rows x 12 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "eef8e887",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FDW58</td>\n",
       "      <td>20.750</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.007565</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FDW14</td>\n",
       "      <td>8.300</td>\n",
       "      <td>reg</td>\n",
       "      <td>0.038428</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NCN55</td>\n",
       "      <td>14.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.099575</td>\n",
       "      <td>Others</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FDQ58</td>\n",
       "      <td>7.315</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.015388</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FDY38</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.118599</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>1985</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5676</th>\n",
       "      <td>FDB58</td>\n",
       "      <td>10.500</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.013496</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>141.3154</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5677</th>\n",
       "      <td>FDD47</td>\n",
       "      <td>7.600</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.142991</td>\n",
       "      <td>Starchy Foods</td>\n",
       "      <td>169.1448</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5678</th>\n",
       "      <td>NCO17</td>\n",
       "      <td>10.000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.073529</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>118.7440</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5679</th>\n",
       "      <td>FDJ26</td>\n",
       "      <td>15.300</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Canned</td>\n",
       "      <td>214.6218</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5680</th>\n",
       "      <td>FDU37</td>\n",
       "      <td>9.500</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.104720</td>\n",
       "      <td>Canned</td>\n",
       "      <td>79.7960</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5681 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0              FDW58       20.750          Low Fat         0.007565   \n",
       "1              FDW14        8.300              reg         0.038428   \n",
       "2              NCN55       14.600          Low Fat         0.099575   \n",
       "3              FDQ58        7.315          Low Fat         0.015388   \n",
       "4              FDY38          NaN          Regular         0.118599   \n",
       "...              ...          ...              ...              ...   \n",
       "5676           FDB58       10.500          Regular         0.013496   \n",
       "5677           FDD47        7.600          Regular         0.142991   \n",
       "5678           NCO17       10.000          Low Fat         0.073529   \n",
       "5679           FDJ26       15.300          Regular         0.000000   \n",
       "5680           FDU37        9.500          Regular         0.104720   \n",
       "\n",
       "               Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0            Snack Foods  107.8622            OUT049   \n",
       "1                  Dairy   87.3198            OUT017   \n",
       "2                 Others  241.7538            OUT010   \n",
       "3            Snack Foods  155.0340            OUT017   \n",
       "4                  Dairy  234.2300            OUT027   \n",
       "...                  ...       ...               ...   \n",
       "5676         Snack Foods  141.3154            OUT046   \n",
       "5677       Starchy Foods  169.1448            OUT018   \n",
       "5678  Health and Hygiene  118.7440            OUT045   \n",
       "5679              Canned  214.6218            OUT017   \n",
       "5680              Canned   79.7960            OUT045   \n",
       "\n",
       "      Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                          1999      Medium               Tier 1   \n",
       "1                          2007         NaN               Tier 2   \n",
       "2                          1998         NaN               Tier 3   \n",
       "3                          2007         NaN               Tier 2   \n",
       "4                          1985      Medium               Tier 3   \n",
       "...                         ...         ...                  ...   \n",
       "5676                       1997       Small               Tier 1   \n",
       "5677                       2009      Medium               Tier 3   \n",
       "5678                       2002         NaN               Tier 2   \n",
       "5679                       2007         NaN               Tier 2   \n",
       "5680                       2002         NaN               Tier 2   \n",
       "\n",
       "            Outlet_Type  \n",
       "0     Supermarket Type1  \n",
       "1     Supermarket Type1  \n",
       "2         Grocery Store  \n",
       "3     Supermarket Type1  \n",
       "4     Supermarket Type3  \n",
       "...                 ...  \n",
       "5676  Supermarket Type1  \n",
       "5677  Supermarket Type2  \n",
       "5678  Supermarket Type1  \n",
       "5679  Supermarket Type1  \n",
       "5680  Supermarket Type1  \n",
       "\n",
       "[5681 rows x 11 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9bcfc0e",
   "metadata": {},
   "source": [
    "CHECKING FOR NULL VALUES"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "29d697c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                 0\n",
       "Item_Weight                  1463\n",
       "Item_Fat_Content                0\n",
       "Item_Visibility                 0\n",
       "Item_Type                       0\n",
       "Item_MRP                        0\n",
       "Outlet_Identifier               0\n",
       "Outlet_Establishment_Year       0\n",
       "Outlet_Size                  2410\n",
       "Outlet_Location_Type            0\n",
       "Outlet_Type                     0\n",
       "Item_Outlet_Sales               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7ee99da2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8523, 12)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "df504380",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility',\n",
       "       'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n",
       "       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n",
       "       'Outlet_Type', 'Item_Outlet_Sales'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "464a42d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                 0\n",
       "Item_Weight                   976\n",
       "Item_Fat_Content                0\n",
       "Item_Visibility                 0\n",
       "Item_Type                       0\n",
       "Item_MRP                        0\n",
       "Outlet_Identifier               0\n",
       "Outlet_Establishment_Year       0\n",
       "Outlet_Size                  1606\n",
       "Outlet_Location_Type            0\n",
       "Outlet_Type                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "42e81330",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5681, 11)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "30c10369",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility',\n",
       "       'Item_Type', 'Item_MRP', 'Outlet_Identifier',\n",
       "       'Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type',\n",
       "       'Outlet_Type'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2401aca5",
   "metadata": {},
   "source": [
    "# DESCRIPTION"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "015c0edb",
   "metadata": {},
   "source": [
    "# The aim to build a predictive model and find out the sales for each products at a particular store"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3429369e",
   "metadata": {},
   "source": [
    "# COLUMNS:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04c541d3",
   "metadata": {},
   "source": [
    "Item_Identifier : ID"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3710e4e",
   "metadata": {},
   "source": [
    "Item_Weight : Weight of item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe3b057f",
   "metadata": {},
   "source": [
    "Item_Fat_Content : Fat content of item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51fbf72f",
   "metadata": {},
   "source": [
    "Item_Visibility: Visibilty of the Item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aaecbdda",
   "metadata": {},
   "source": [
    "Item_Type : Type of item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "515d7091",
   "metadata": {},
   "source": [
    "Item_MRP : Price of Item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf718f4c",
   "metadata": {},
   "source": [
    "Outlet_Identifier : ID of The Outlet"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a6e5330",
   "metadata": {},
   "source": [
    "Outlet_Establishment_Year : Year in which Retail Outlet was Started"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "430aaf26",
   "metadata": {},
   "source": [
    "Outlet_Size : Size of Outlet"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a9c46f30",
   "metadata": {},
   "source": [
    "Outlet_Location_Type : The tier of the Retail outlet"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d020a18",
   "metadata": {},
   "source": [
    "Outlet_Type : Type of outlet"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e34f5a6d",
   "metadata": {},
   "source": [
    "Item_Outlet_Sales: The total sales made by an outlet(Target columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e91cd6d",
   "metadata": {},
   "source": [
    "# Checking for 0 values in dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b54b764f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                0\n",
       "Item_Weight                    0\n",
       "Item_Fat_Content               0\n",
       "Item_Visibility              526\n",
       "Item_Type                      0\n",
       "Item_MRP                       0\n",
       "Outlet_Identifier              0\n",
       "Outlet_Establishment_Year      0\n",
       "Outlet_Size                    0\n",
       "Outlet_Location_Type           0\n",
       "Outlet_Type                    0\n",
       "Item_Outlet_Sales              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df==0).sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2faf6fc5",
   "metadata": {},
   "source": [
    "Item_Visibility has 526 '0' Values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "176e96af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                0\n",
       "Item_Weight                    0\n",
       "Item_Fat_Content               0\n",
       "Item_Visibility              353\n",
       "Item_Type                      0\n",
       "Item_MRP                       0\n",
       "Outlet_Identifier              0\n",
       "Outlet_Establishment_Year      0\n",
       "Outlet_Size                    0\n",
       "Outlet_Location_Type           0\n",
       "Outlet_Type                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df1==0).sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c5a34aa",
   "metadata": {},
   "source": [
    "Item_Visibility has 353 '0' Values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1160a01e",
   "metadata": {},
   "source": [
    "# Basic summary and statistical information of data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "80251c62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier              1559\n",
       "Item_Weight                   415\n",
       "Item_Fat_Content                5\n",
       "Item_Visibility              7880\n",
       "Item_Type                      16\n",
       "Item_MRP                     5938\n",
       "Outlet_Identifier              10\n",
       "Outlet_Establishment_Year       9\n",
       "Outlet_Size                     3\n",
       "Outlet_Location_Type            3\n",
       "Outlet_Type                     4\n",
       "Item_Outlet_Sales            3493\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bd2e8a5",
   "metadata": {},
   "source": [
    "Item_Fat_Content has 5 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3aedd551",
   "metadata": {},
   "source": [
    "Item_Type Content has 16 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f482b99",
   "metadata": {},
   "source": [
    "Outlet_Identifier has 10 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3f9b773",
   "metadata": {},
   "source": [
    "Outlet_Establishment_Year has 9 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdb4b04d",
   "metadata": {},
   "source": [
    "Outlet_Size has 3 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11fd742c",
   "metadata": {},
   "source": [
    "Outlet_Location_Type has 3 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6c0b834",
   "metadata": {},
   "source": [
    "Outlet_Type has 4 unique categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "03751c65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier              1543\n",
       "Item_Weight                   410\n",
       "Item_Fat_Content                5\n",
       "Item_Visibility              5277\n",
       "Item_Type                      16\n",
       "Item_MRP                     4402\n",
       "Outlet_Identifier              10\n",
       "Outlet_Establishment_Year       9\n",
       "Outlet_Size                     3\n",
       "Outlet_Location_Type            3\n",
       "Outlet_Type                     4\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7c17afd",
   "metadata": {},
   "source": [
    "Item_Fat_Content has 5 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e2983ff",
   "metadata": {},
   "source": [
    "Item_Type has 16 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "693bb8db",
   "metadata": {},
   "source": [
    "Outlet_Identifier has 10 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8ad7fd0",
   "metadata": {},
   "source": [
    "Outlet_Establishment_Year 9 discrete values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb949f36",
   "metadata": {},
   "source": [
    "Outlet_Size has 3 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e60b056",
   "metadata": {},
   "source": [
    "Outlet_Location_Type has 3 unique categories"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc459643",
   "metadata": {},
   "source": [
    "Outlet_Type has 4 unique categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "40aadd1c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Weight                  0.129975\n",
       "Item_Visibility              1.238312\n",
       "Item_MRP                     0.136182\n",
       "Outlet_Establishment_Year   -0.396306\n",
       "dtype: float64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.skew()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4faae749",
   "metadata": {},
   "source": [
    "# Getting the basic summary and statistical information of the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "cddf95cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 8523 entries, 0 to 8522\n",
      "Data columns (total 12 columns):\n",
      " #   Column                     Non-Null Count  Dtype  \n",
      "---  ------                     --------------  -----  \n",
      " 0   Item_Identifier            8523 non-null   object \n",
      " 1   Item_Weight                7060 non-null   float64\n",
      " 2   Item_Fat_Content           8523 non-null   object \n",
      " 3   Item_Visibility            8523 non-null   float64\n",
      " 4   Item_Type                  8523 non-null   object \n",
      " 5   Item_MRP                   8523 non-null   float64\n",
      " 6   Outlet_Identifier          8523 non-null   object \n",
      " 7   Outlet_Establishment_Year  8523 non-null   int64  \n",
      " 8   Outlet_Size                6113 non-null   object \n",
      " 9   Outlet_Location_Type       8523 non-null   object \n",
      " 10  Outlet_Type                8523 non-null   object \n",
      " 11  Item_Outlet_Sales          8523 non-null   float64\n",
      "dtypes: float64(4), int64(1), object(7)\n",
      "memory usage: 799.2+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "1f6be350",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 5681 entries, 0 to 5680\n",
      "Data columns (total 11 columns):\n",
      " #   Column                     Non-Null Count  Dtype  \n",
      "---  ------                     --------------  -----  \n",
      " 0   Item_Identifier            5681 non-null   object \n",
      " 1   Item_Weight                4705 non-null   float64\n",
      " 2   Item_Fat_Content           5681 non-null   object \n",
      " 3   Item_Visibility            5681 non-null   float64\n",
      " 4   Item_Type                  5681 non-null   object \n",
      " 5   Item_MRP                   5681 non-null   float64\n",
      " 6   Outlet_Identifier          5681 non-null   object \n",
      " 7   Outlet_Establishment_Year  5681 non-null   int64  \n",
      " 8   Outlet_Size                4075 non-null   object \n",
      " 9   Outlet_Location_Type       5681 non-null   object \n",
      " 10  Outlet_Type                5681 non-null   object \n",
      "dtypes: float64(3), int64(1), object(7)\n",
      "memory usage: 488.3+ KB\n"
     ]
    }
   ],
   "source": [
    "df1.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5e3cc95",
   "metadata": {},
   "source": [
    "Item_Identifier, Item_Fat_Content, Item_Type, Outlet_Identifier, Outlet_Size, Outlet_Location_Type, Outlet_Type are of categorica data, while Outlet_Establishment_Year is discrete data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3e74e8c",
   "metadata": {},
   "source": [
    " Item_Weight, Item_Visibility, Item_MRP are float type and contineous in nature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ee621483",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier               object\n",
       "Item_Weight                  float64\n",
       "Item_Fat_Content              object\n",
       "Item_Visibility              float64\n",
       "Item_Type                     object\n",
       "Item_MRP                     float64\n",
       "Outlet_Identifier             object\n",
       "Outlet_Establishment_Year      int64\n",
       "Outlet_Size                   object\n",
       "Outlet_Location_Type          object\n",
       "Outlet_Type                   object\n",
       "Item_Outlet_Sales            float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "728e1a33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier               object\n",
       "Item_Weight                  float64\n",
       "Item_Fat_Content              object\n",
       "Item_Visibility              float64\n",
       "Item_Type                     object\n",
       "Item_MRP                     float64\n",
       "Outlet_Identifier             object\n",
       "Outlet_Establishment_Year      int64\n",
       "Outlet_Size                   object\n",
       "Outlet_Location_Type          object\n",
       "Outlet_Type                   object\n",
       "dtype: object"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d2c6857e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7060.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>12.857645</td>\n",
       "      <td>0.066132</td>\n",
       "      <td>140.992782</td>\n",
       "      <td>1997.831867</td>\n",
       "      <td>2181.288914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.643456</td>\n",
       "      <td>0.051598</td>\n",
       "      <td>62.275067</td>\n",
       "      <td>8.371760</td>\n",
       "      <td>1706.499616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.555000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.290000</td>\n",
       "      <td>1985.000000</td>\n",
       "      <td>33.290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>8.773750</td>\n",
       "      <td>0.026989</td>\n",
       "      <td>93.826500</td>\n",
       "      <td>1987.000000</td>\n",
       "      <td>834.247400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>12.600000</td>\n",
       "      <td>0.053931</td>\n",
       "      <td>143.012800</td>\n",
       "      <td>1999.000000</td>\n",
       "      <td>1794.331000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>16.850000</td>\n",
       "      <td>0.094585</td>\n",
       "      <td>185.643700</td>\n",
       "      <td>2004.000000</td>\n",
       "      <td>3101.296400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>21.350000</td>\n",
       "      <td>0.328391</td>\n",
       "      <td>266.888400</td>\n",
       "      <td>2009.000000</td>\n",
       "      <td>13086.964800</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Item_Weight  Item_Visibility     Item_MRP  Outlet_Establishment_Year  \\\n",
       "count  7060.000000      8523.000000  8523.000000                8523.000000   \n",
       "mean     12.857645         0.066132   140.992782                1997.831867   \n",
       "std       4.643456         0.051598    62.275067                   8.371760   \n",
       "min       4.555000         0.000000    31.290000                1985.000000   \n",
       "25%       8.773750         0.026989    93.826500                1987.000000   \n",
       "50%      12.600000         0.053931   143.012800                1999.000000   \n",
       "75%      16.850000         0.094585   185.643700                2004.000000   \n",
       "max      21.350000         0.328391   266.888400                2009.000000   \n",
       "\n",
       "       Item_Outlet_Sales  \n",
       "count        8523.000000  \n",
       "mean         2181.288914  \n",
       "std          1706.499616  \n",
       "min            33.290000  \n",
       "25%           834.247400  \n",
       "50%          1794.331000  \n",
       "75%          3101.296400  \n",
       "max         13086.964800  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "329c346a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7060.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "      <td>8523.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>12.857645</td>\n",
       "      <td>0.066132</td>\n",
       "      <td>140.992782</td>\n",
       "      <td>1997.831867</td>\n",
       "      <td>2181.288914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.643456</td>\n",
       "      <td>0.051598</td>\n",
       "      <td>62.275067</td>\n",
       "      <td>8.371760</td>\n",
       "      <td>1706.499616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.555000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.290000</td>\n",
       "      <td>1985.000000</td>\n",
       "      <td>33.290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>8.773750</td>\n",
       "      <td>0.026989</td>\n",
       "      <td>93.826500</td>\n",
       "      <td>1987.000000</td>\n",
       "      <td>834.247400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>12.600000</td>\n",
       "      <td>0.053931</td>\n",
       "      <td>143.012800</td>\n",
       "      <td>1999.000000</td>\n",
       "      <td>1794.331000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>16.850000</td>\n",
       "      <td>0.094585</td>\n",
       "      <td>185.643700</td>\n",
       "      <td>2004.000000</td>\n",
       "      <td>3101.296400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>21.350000</td>\n",
       "      <td>0.328391</td>\n",
       "      <td>266.888400</td>\n",
       "      <td>2009.000000</td>\n",
       "      <td>13086.964800</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Item_Weight  Item_Visibility     Item_MRP  Outlet_Establishment_Year  \\\n",
       "count  7060.000000      8523.000000  8523.000000                8523.000000   \n",
       "mean     12.857645         0.066132   140.992782                1997.831867   \n",
       "std       4.643456         0.051598    62.275067                   8.371760   \n",
       "min       4.555000         0.000000    31.290000                1985.000000   \n",
       "25%       8.773750         0.026989    93.826500                1987.000000   \n",
       "50%      12.600000         0.053931   143.012800                1999.000000   \n",
       "75%      16.850000         0.094585   185.643700                2004.000000   \n",
       "max      21.350000         0.328391   266.888400                2009.000000   \n",
       "\n",
       "       Item_Outlet_Sales  \n",
       "count        8523.000000  \n",
       "mean         2181.288914  \n",
       "std          1706.499616  \n",
       "min            33.290000  \n",
       "25%           834.247400  \n",
       "50%          1794.331000  \n",
       "75%          3101.296400  \n",
       "max         13086.964800  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29d86daf",
   "metadata": {},
   "source": [
    "From the above tables it is observed that the outlets have been operating from as early as 1985, on an average the outlets have been running since 1997, with last one having been established in 2009.\n",
    "\n",
    "The average MRP of the items is 140.9 and 50% of the items are priced upto around 143.\n",
    "\n",
    "The average sales made by the outlets is 2181.28"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4cf92cfa",
   "metadata": {},
   "source": [
    "# Finding Null values in DataSets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5b70129d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                 0\n",
       "Item_Weight                  1463\n",
       "Item_Fat_Content                0\n",
       "Item_Visibility                 0\n",
       "Item_Type                       0\n",
       "Item_MRP                        0\n",
       "Outlet_Identifier               0\n",
       "Outlet_Establishment_Year       0\n",
       "Outlet_Size                  2410\n",
       "Outlet_Location_Type            0\n",
       "Outlet_Type                     0\n",
       "Item_Outlet_Sales               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b2d94a66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                 0\n",
       "Item_Weight                   976\n",
       "Item_Fat_Content                0\n",
       "Item_Visibility                 0\n",
       "Item_Type                       0\n",
       "Item_MRP                        0\n",
       "Outlet_Identifier               0\n",
       "Outlet_Establishment_Year       0\n",
       "Outlet_Size                  1606\n",
       "Outlet_Location_Type            0\n",
       "Outlet_Type                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ed1efd2",
   "metadata": {},
   "source": [
    "'Item_Weight' is continuous in nature, imputing null values with either mean or median will be the ideal strategy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7d48de13",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      9.300\n",
       "1      5.920\n",
       "2     17.500\n",
       "3     19.200\n",
       "4      8.930\n",
       "5     10.395\n",
       "6     13.650\n",
       "7        NaN\n",
       "8     16.200\n",
       "9     19.200\n",
       "10    11.800\n",
       "11    18.500\n",
       "12    15.100\n",
       "13    17.600\n",
       "14    16.350\n",
       "15     9.000\n",
       "16    11.800\n",
       "17     9.000\n",
       "18       NaN\n",
       "19    13.350\n",
       "20    18.850\n",
       "21       NaN\n",
       "22    14.600\n",
       "23       NaN\n",
       "24    13.850\n",
       "25    13.000\n",
       "26     7.645\n",
       "27    11.650\n",
       "28     5.925\n",
       "29       NaN\n",
       "30    19.250\n",
       "31    18.600\n",
       "32    18.700\n",
       "33    17.850\n",
       "34    17.500\n",
       "35    10.000\n",
       "36       NaN\n",
       "37     8.850\n",
       "38       NaN\n",
       "39       NaN\n",
       "40    13.350\n",
       "41     9.800\n",
       "42    13.600\n",
       "43    21.350\n",
       "44    12.150\n",
       "45     6.420\n",
       "46    19.600\n",
       "47    10.000\n",
       "48    15.850\n",
       "49       NaN\n",
       "Name: Item_Weight, dtype: float64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Item_Weight'].head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c7c31dfc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     20.750\n",
       "1      8.300\n",
       "2     14.600\n",
       "3      7.315\n",
       "4        NaN\n",
       "5      9.800\n",
       "6     19.350\n",
       "7        NaN\n",
       "8      6.305\n",
       "9      5.985\n",
       "10    16.600\n",
       "11     6.590\n",
       "12       NaN\n",
       "13     4.785\n",
       "14    16.750\n",
       "15     6.135\n",
       "16    19.850\n",
       "17    17.850\n",
       "18       NaN\n",
       "19    13.600\n",
       "20     7.100\n",
       "21    19.200\n",
       "22    13.650\n",
       "23       NaN\n",
       "24    19.200\n",
       "25     6.785\n",
       "26    13.000\n",
       "27     5.825\n",
       "28    13.800\n",
       "29    12.800\n",
       "30       NaN\n",
       "31     9.500\n",
       "32    12.500\n",
       "33       NaN\n",
       "34     5.780\n",
       "35       NaN\n",
       "36       NaN\n",
       "37    10.395\n",
       "38    18.350\n",
       "39       NaN\n",
       "40    21.100\n",
       "41    19.750\n",
       "42     8.430\n",
       "43    15.350\n",
       "44     6.710\n",
       "45    10.195\n",
       "46    11.650\n",
       "47    12.850\n",
       "48    12.150\n",
       "49    18.250\n",
       "Name: Item_Weight, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['Item_Weight'].head(50)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9d3f1ed",
   "metadata": {},
   "source": [
    "Checking Outliers;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "acf796ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Weight'>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(df['Item_Weight'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "27fe40f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Weight'>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(df['Item_Weight'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef15b448",
   "metadata": {},
   "source": [
    "NO OUTELIERS PRESENT"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0f6f047",
   "metadata": {},
   "source": [
    "'Item_Weight' also has a relation to 'item type', for eg: items belonging to 'Meat' / 'Fruits and Vegetables' won't be in the same weight range as those items that belong to 'Soft Drinks' or 'Hard Drinks'. Therefore filling in the null values with the mean of Item_weight values belonging to their own respective 'item type'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d334db01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Fruits and Vegetables    1232\n",
       "Snack Foods              1200\n",
       "Household                 910\n",
       "Frozen Foods              856\n",
       "Dairy                     682\n",
       "Canned                    649\n",
       "Baking Goods              648\n",
       "Health and Hygiene        520\n",
       "Soft Drinks               445\n",
       "Meat                      425\n",
       "Breads                    251\n",
       "Hard Drinks               214\n",
       "Others                    169\n",
       "Starchy Foods             148\n",
       "Breakfast                 110\n",
       "Seafood                    64\n",
       "Name: Item_Type, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Item_Type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "9a35b1eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Snack Foods              789\n",
       "Fruits and Vegetables    781\n",
       "Household                638\n",
       "Frozen Foods             570\n",
       "Dairy                    454\n",
       "Baking Goods             438\n",
       "Canned                   435\n",
       "Health and Hygiene       338\n",
       "Meat                     311\n",
       "Soft Drinks              281\n",
       "Breads                   165\n",
       "Hard Drinks              148\n",
       "Starchy Foods            121\n",
       "Others                   111\n",
       "Breakfast                 76\n",
       "Seafood                   25\n",
       "Name: Item_Type, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['Item_Type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "079571a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_wt=df.groupby('Item_Type').agg({'Item_Weight':'mean'})\n",
    "mean_wt1=df1.groupby('Item_Type').agg({'Item_Weight':'mean'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "b789192e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item_Type</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Baking Goods</th>\n",
       "      <td>12.277108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Breads</th>\n",
       "      <td>11.346936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Breakfast</th>\n",
       "      <td>12.768202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Canned</th>\n",
       "      <td>12.305705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dairy</th>\n",
       "      <td>13.426069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Frozen Foods</th>\n",
       "      <td>12.867061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fruits and Vegetables</th>\n",
       "      <td>13.224769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hard Drinks</th>\n",
       "      <td>11.400328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Health and Hygiene</th>\n",
       "      <td>13.142314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Household</th>\n",
       "      <td>13.384736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Meat</th>\n",
       "      <td>12.817344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Others</th>\n",
       "      <td>13.853285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Seafood</th>\n",
       "      <td>12.552843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Snack Foods</th>\n",
       "      <td>12.987880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Soft Drinks</th>\n",
       "      <td>11.847460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Starchy Foods</th>\n",
       "      <td>13.690731</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Item_Weight\n",
       "Item_Type                         \n",
       "Baking Goods             12.277108\n",
       "Breads                   11.346936\n",
       "Breakfast                12.768202\n",
       "Canned                   12.305705\n",
       "Dairy                    13.426069\n",
       "Frozen Foods             12.867061\n",
       "Fruits and Vegetables    13.224769\n",
       "Hard Drinks              11.400328\n",
       "Health and Hygiene       13.142314\n",
       "Household                13.384736\n",
       "Meat                     12.817344\n",
       "Others                   13.853285\n",
       "Seafood                  12.552843\n",
       "Snack Foods              12.987880\n",
       "Soft Drinks              11.847460\n",
       "Starchy Foods            13.690731"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_wt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "9c920b2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item_Type</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Baking Goods</th>\n",
       "      <td>12.272418</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Breads</th>\n",
       "      <td>10.866799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Breakfast</th>\n",
       "      <td>13.759603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Canned</th>\n",
       "      <td>12.393565</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dairy</th>\n",
       "      <td>12.955040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Frozen Foods</th>\n",
       "      <td>12.101543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fruits and Vegetables</th>\n",
       "      <td>13.146659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hard Drinks</th>\n",
       "      <td>11.844417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Health and Hygiene</th>\n",
       "      <td>13.216929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Household</th>\n",
       "      <td>13.270504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Meat</th>\n",
       "      <td>12.702148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Others</th>\n",
       "      <td>14.009725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Seafood</th>\n",
       "      <td>13.241136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Snack Foods</th>\n",
       "      <td>12.684256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Soft Drinks</th>\n",
       "      <td>11.691965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Starchy Foods</th>\n",
       "      <td>13.618247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Item_Weight\n",
       "Item_Type                         \n",
       "Baking Goods             12.272418\n",
       "Breads                   10.866799\n",
       "Breakfast                13.759603\n",
       "Canned                   12.393565\n",
       "Dairy                    12.955040\n",
       "Frozen Foods             12.101543\n",
       "Fruits and Vegetables    13.146659\n",
       "Hard Drinks              11.844417\n",
       "Health and Hygiene       13.216929\n",
       "Household                13.270504\n",
       "Meat                     12.702148\n",
       "Others                   14.009725\n",
       "Seafood                  13.241136\n",
       "Snack Foods              12.684256\n",
       "Soft Drinks              11.691965\n",
       "Starchy Foods            13.618247"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_wt1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "3a05034f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Baking Goods', 'Breads', 'Breakfast', 'Canned', 'Dairy',\n",
       "       'Frozen Foods', 'Fruits and Vegetables', 'Hard Drinks',\n",
       "       'Health and Hygiene', 'Household', 'Meat', 'Others', 'Seafood',\n",
       "       'Snack Foods', 'Soft Drinks', 'Starchy Foods'],\n",
       "      dtype='object', name='Item_Type')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_wt.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "47a2c962",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Baking Goods', 'Breads', 'Breakfast', 'Canned', 'Dairy',\n",
       "       'Frozen Foods', 'Fruits and Vegetables', 'Hard Drinks',\n",
       "       'Health and Hygiene', 'Household', 'Meat', 'Others', 'Seafood',\n",
       "       'Snack Foods', 'Soft Drinks', 'Starchy Foods'],\n",
       "      dtype='object', name='Item_Type')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_wt1.index"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f871c0c9",
   "metadata": {},
   "source": [
    "Creating a new column in main DataFrame to map corresponding values to the column to nan values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "ebf461b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "meanwtdt=dict(zip(mean_wt.index,mean_wt.Item_Weight))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "2a434bd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "meanwtdt1=dict(zip(mean_wt1.index,mean_wt.Item_Weight))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "467e17d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['meanwt']=df['Item_Type'].map(meanwtdt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "27d40f17",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['meanwt1']=df1['Item_Type'].map(meanwtdt1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "ceab5a19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <th>meanwt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FDA15</td>\n",
       "      <td>9.300</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016047</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3735.1380</td>\n",
       "      <td>13.426069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>DRC01</td>\n",
       "      <td>5.920</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.019278</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>443.4228</td>\n",
       "      <td>11.847460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FDN15</td>\n",
       "      <td>17.500</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016760</td>\n",
       "      <td>Meat</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2097.2700</td>\n",
       "      <td>12.817344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FDX07</td>\n",
       "      <td>19.200</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Fruits and Vegetables</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>732.3800</td>\n",
       "      <td>13.224769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NCD19</td>\n",
       "      <td>8.930</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Household</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>994.7052</td>\n",
       "      <td>13.384736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8518</th>\n",
       "      <td>FDF22</td>\n",
       "      <td>6.865</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.056783</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>214.5218</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2778.3834</td>\n",
       "      <td>12.987880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8519</th>\n",
       "      <td>FDS36</td>\n",
       "      <td>8.380</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.046982</td>\n",
       "      <td>Baking Goods</td>\n",
       "      <td>108.1570</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>549.2850</td>\n",
       "      <td>12.277108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8520</th>\n",
       "      <td>NCJ29</td>\n",
       "      <td>10.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.035186</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>85.1224</td>\n",
       "      <td>OUT035</td>\n",
       "      <td>2004</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>1193.1136</td>\n",
       "      <td>13.142314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8521</th>\n",
       "      <td>FDN46</td>\n",
       "      <td>7.210</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.145221</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>103.1332</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>1845.5976</td>\n",
       "      <td>12.987880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8522</th>\n",
       "      <td>DRG01</td>\n",
       "      <td>14.800</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.044878</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>75.4670</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>765.6700</td>\n",
       "      <td>11.847460</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8523 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0              FDA15        9.300          Low Fat         0.016047   \n",
       "1              DRC01        5.920          Regular         0.019278   \n",
       "2              FDN15       17.500          Low Fat         0.016760   \n",
       "3              FDX07       19.200          Regular         0.000000   \n",
       "4              NCD19        8.930          Low Fat         0.000000   \n",
       "...              ...          ...              ...              ...   \n",
       "8518           FDF22        6.865          Low Fat         0.056783   \n",
       "8519           FDS36        8.380          Regular         0.046982   \n",
       "8520           NCJ29       10.600          Low Fat         0.035186   \n",
       "8521           FDN46        7.210          Regular         0.145221   \n",
       "8522           DRG01       14.800          Low Fat         0.044878   \n",
       "\n",
       "                  Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0                     Dairy  249.8092            OUT049   \n",
       "1               Soft Drinks   48.2692            OUT018   \n",
       "2                      Meat  141.6180            OUT049   \n",
       "3     Fruits and Vegetables  182.0950            OUT010   \n",
       "4                 Household   53.8614            OUT013   \n",
       "...                     ...       ...               ...   \n",
       "8518            Snack Foods  214.5218            OUT013   \n",
       "8519           Baking Goods  108.1570            OUT045   \n",
       "8520     Health and Hygiene   85.1224            OUT035   \n",
       "8521            Snack Foods  103.1332            OUT018   \n",
       "8522            Soft Drinks   75.4670            OUT046   \n",
       "\n",
       "      Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                          1999      Medium               Tier 1   \n",
       "1                          2009      Medium               Tier 3   \n",
       "2                          1999      Medium               Tier 1   \n",
       "3                          1998         NaN               Tier 3   \n",
       "4                          1987        High               Tier 3   \n",
       "...                         ...         ...                  ...   \n",
       "8518                       1987        High               Tier 3   \n",
       "8519                       2002         NaN               Tier 2   \n",
       "8520                       2004       Small               Tier 2   \n",
       "8521                       2009      Medium               Tier 3   \n",
       "8522                       1997       Small               Tier 1   \n",
       "\n",
       "            Outlet_Type  Item_Outlet_Sales     meanwt  \n",
       "0     Supermarket Type1          3735.1380  13.426069  \n",
       "1     Supermarket Type2           443.4228  11.847460  \n",
       "2     Supermarket Type1          2097.2700  12.817344  \n",
       "3         Grocery Store           732.3800  13.224769  \n",
       "4     Supermarket Type1           994.7052  13.384736  \n",
       "...                 ...                ...        ...  \n",
       "8518  Supermarket Type1          2778.3834  12.987880  \n",
       "8519  Supermarket Type1           549.2850  12.277108  \n",
       "8520  Supermarket Type1          1193.1136  13.142314  \n",
       "8521  Supermarket Type2          1845.5976  12.987880  \n",
       "8522  Supermarket Type1           765.6700  11.847460  \n",
       "\n",
       "[8523 rows x 13 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "343b4363",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>meanwt1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FDW58</td>\n",
       "      <td>20.750</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.007565</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>12.987880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FDW14</td>\n",
       "      <td>8.300</td>\n",
       "      <td>reg</td>\n",
       "      <td>0.038428</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>13.426069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NCN55</td>\n",
       "      <td>14.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.099575</td>\n",
       "      <td>Others</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>13.853285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FDQ58</td>\n",
       "      <td>7.315</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.015388</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>12.987880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FDY38</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.118599</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>1985</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "      <td>13.426069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5676</th>\n",
       "      <td>FDB58</td>\n",
       "      <td>10.500</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.013496</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>141.3154</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>12.987880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5677</th>\n",
       "      <td>FDD47</td>\n",
       "      <td>7.600</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.142991</td>\n",
       "      <td>Starchy Foods</td>\n",
       "      <td>169.1448</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>13.690731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5678</th>\n",
       "      <td>NCO17</td>\n",
       "      <td>10.000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.073529</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>118.7440</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>13.142314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5679</th>\n",
       "      <td>FDJ26</td>\n",
       "      <td>15.300</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Canned</td>\n",
       "      <td>214.6218</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>12.305705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5680</th>\n",
       "      <td>FDU37</td>\n",
       "      <td>9.500</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.104720</td>\n",
       "      <td>Canned</td>\n",
       "      <td>79.7960</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>12.305705</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5681 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0              FDW58       20.750          Low Fat         0.007565   \n",
       "1              FDW14        8.300              reg         0.038428   \n",
       "2              NCN55       14.600          Low Fat         0.099575   \n",
       "3              FDQ58        7.315          Low Fat         0.015388   \n",
       "4              FDY38          NaN          Regular         0.118599   \n",
       "...              ...          ...              ...              ...   \n",
       "5676           FDB58       10.500          Regular         0.013496   \n",
       "5677           FDD47        7.600          Regular         0.142991   \n",
       "5678           NCO17       10.000          Low Fat         0.073529   \n",
       "5679           FDJ26       15.300          Regular         0.000000   \n",
       "5680           FDU37        9.500          Regular         0.104720   \n",
       "\n",
       "               Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0            Snack Foods  107.8622            OUT049   \n",
       "1                  Dairy   87.3198            OUT017   \n",
       "2                 Others  241.7538            OUT010   \n",
       "3            Snack Foods  155.0340            OUT017   \n",
       "4                  Dairy  234.2300            OUT027   \n",
       "...                  ...       ...               ...   \n",
       "5676         Snack Foods  141.3154            OUT046   \n",
       "5677       Starchy Foods  169.1448            OUT018   \n",
       "5678  Health and Hygiene  118.7440            OUT045   \n",
       "5679              Canned  214.6218            OUT017   \n",
       "5680              Canned   79.7960            OUT045   \n",
       "\n",
       "      Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                          1999      Medium               Tier 1   \n",
       "1                          2007         NaN               Tier 2   \n",
       "2                          1998         NaN               Tier 3   \n",
       "3                          2007         NaN               Tier 2   \n",
       "4                          1985      Medium               Tier 3   \n",
       "...                         ...         ...                  ...   \n",
       "5676                       1997       Small               Tier 1   \n",
       "5677                       2009      Medium               Tier 3   \n",
       "5678                       2002         NaN               Tier 2   \n",
       "5679                       2007         NaN               Tier 2   \n",
       "5680                       2002         NaN               Tier 2   \n",
       "\n",
       "            Outlet_Type    meanwt1  \n",
       "0     Supermarket Type1  12.987880  \n",
       "1     Supermarket Type1  13.426069  \n",
       "2         Grocery Store  13.853285  \n",
       "3     Supermarket Type1  12.987880  \n",
       "4     Supermarket Type3  13.426069  \n",
       "...                 ...        ...  \n",
       "5676  Supermarket Type1  12.987880  \n",
       "5677  Supermarket Type2  13.690731  \n",
       "5678  Supermarket Type1  13.142314  \n",
       "5679  Supermarket Type1  12.305705  \n",
       "5680  Supermarket Type1  12.305705  \n",
       "\n",
       "[5681 rows x 12 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "968d7b8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Item_Weight']=df['Item_Weight'].replace('None',np.nan)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ef14867e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Item_Weight']=df['Item_Weight'].fillna((df['meanwt']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "0779277b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Item_Weight']=df1['Item_Weight'].replace('None',np.nan)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f4bcf5e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Item_Weight']=df1['Item_Weight'].fillna((df1['meanwt1']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "3058556e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.drop(columns='meanwt1',inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "1c09e0b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FDW58</td>\n",
       "      <td>20.750000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.007565</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FDW14</td>\n",
       "      <td>8.300000</td>\n",
       "      <td>reg</td>\n",
       "      <td>0.038428</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NCN55</td>\n",
       "      <td>14.600000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.099575</td>\n",
       "      <td>Others</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FDQ58</td>\n",
       "      <td>7.315000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.015388</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>FDY38</td>\n",
       "      <td>13.426069</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.118599</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>1985</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5676</th>\n",
       "      <td>FDB58</td>\n",
       "      <td>10.500000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.013496</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>141.3154</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5677</th>\n",
       "      <td>FDD47</td>\n",
       "      <td>7.600000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.142991</td>\n",
       "      <td>Starchy Foods</td>\n",
       "      <td>169.1448</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5678</th>\n",
       "      <td>NCO17</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.073529</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>118.7440</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5679</th>\n",
       "      <td>FDJ26</td>\n",
       "      <td>15.300000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Canned</td>\n",
       "      <td>214.6218</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5680</th>\n",
       "      <td>FDU37</td>\n",
       "      <td>9.500000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.104720</td>\n",
       "      <td>Canned</td>\n",
       "      <td>79.7960</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5681 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0              FDW58    20.750000          Low Fat         0.007565   \n",
       "1              FDW14     8.300000              reg         0.038428   \n",
       "2              NCN55    14.600000          Low Fat         0.099575   \n",
       "3              FDQ58     7.315000          Low Fat         0.015388   \n",
       "4              FDY38    13.426069          Regular         0.118599   \n",
       "...              ...          ...              ...              ...   \n",
       "5676           FDB58    10.500000          Regular         0.013496   \n",
       "5677           FDD47     7.600000          Regular         0.142991   \n",
       "5678           NCO17    10.000000          Low Fat         0.073529   \n",
       "5679           FDJ26    15.300000          Regular         0.000000   \n",
       "5680           FDU37     9.500000          Regular         0.104720   \n",
       "\n",
       "               Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0            Snack Foods  107.8622            OUT049   \n",
       "1                  Dairy   87.3198            OUT017   \n",
       "2                 Others  241.7538            OUT010   \n",
       "3            Snack Foods  155.0340            OUT017   \n",
       "4                  Dairy  234.2300            OUT027   \n",
       "...                  ...       ...               ...   \n",
       "5676         Snack Foods  141.3154            OUT046   \n",
       "5677       Starchy Foods  169.1448            OUT018   \n",
       "5678  Health and Hygiene  118.7440            OUT045   \n",
       "5679              Canned  214.6218            OUT017   \n",
       "5680              Canned   79.7960            OUT045   \n",
       "\n",
       "      Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                          1999      Medium               Tier 1   \n",
       "1                          2007         NaN               Tier 2   \n",
       "2                          1998         NaN               Tier 3   \n",
       "3                          2007         NaN               Tier 2   \n",
       "4                          1985      Medium               Tier 3   \n",
       "...                         ...         ...                  ...   \n",
       "5676                       1997       Small               Tier 1   \n",
       "5677                       2009      Medium               Tier 3   \n",
       "5678                       2002         NaN               Tier 2   \n",
       "5679                       2007         NaN               Tier 2   \n",
       "5680                       2002         NaN               Tier 2   \n",
       "\n",
       "            Outlet_Type  \n",
       "0     Supermarket Type1  \n",
       "1     Supermarket Type1  \n",
       "2         Grocery Store  \n",
       "3     Supermarket Type1  \n",
       "4     Supermarket Type3  \n",
       "...                 ...  \n",
       "5676  Supermarket Type1  \n",
       "5677  Supermarket Type2  \n",
       "5678  Supermarket Type1  \n",
       "5679  Supermarket Type1  \n",
       "5680  Supermarket Type1  \n",
       "\n",
       "[5681 rows x 11 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "2c94f116",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                 0\n",
       "Item_Weight                     0\n",
       "Item_Fat_Content                0\n",
       "Item_Visibility                 0\n",
       "Item_Type                       0\n",
       "Item_MRP                        0\n",
       "Outlet_Identifier               0\n",
       "Outlet_Establishment_Year       0\n",
       "Outlet_Size                  1606\n",
       "Outlet_Location_Type            0\n",
       "Outlet_Type                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "1d2890f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier                 0\n",
       "Item_Weight                     0\n",
       "Item_Fat_Content                0\n",
       "Item_Visibility                 0\n",
       "Item_Type                       0\n",
       "Item_MRP                        0\n",
       "Outlet_Identifier               0\n",
       "Outlet_Establishment_Year       0\n",
       "Outlet_Size                  2410\n",
       "Outlet_Location_Type            0\n",
       "Outlet_Type                     0\n",
       "Item_Outlet_Sales               0\n",
       "meanwt                          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "eb2c4432",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Identifier</th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>FDA15</td>\n",
       "      <td>9.300</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016047</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3735.1380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>DRC01</td>\n",
       "      <td>5.920</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.019278</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>443.4228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FDN15</td>\n",
       "      <td>17.500</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016760</td>\n",
       "      <td>Meat</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2097.2700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FDX07</td>\n",
       "      <td>19.200</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Fruits and Vegetables</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>732.3800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NCD19</td>\n",
       "      <td>8.930</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Household</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>994.7052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8518</th>\n",
       "      <td>FDF22</td>\n",
       "      <td>6.865</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.056783</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>214.5218</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2778.3834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8519</th>\n",
       "      <td>FDS36</td>\n",
       "      <td>8.380</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.046982</td>\n",
       "      <td>Baking Goods</td>\n",
       "      <td>108.1570</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>549.2850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8520</th>\n",
       "      <td>NCJ29</td>\n",
       "      <td>10.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.035186</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>85.1224</td>\n",
       "      <td>OUT035</td>\n",
       "      <td>2004</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>1193.1136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8521</th>\n",
       "      <td>FDN46</td>\n",
       "      <td>7.210</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.145221</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>103.1332</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>1845.5976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8522</th>\n",
       "      <td>DRG01</td>\n",
       "      <td>14.800</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.044878</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>75.4670</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>765.6700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8523 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Item_Identifier  Item_Weight Item_Fat_Content  Item_Visibility  \\\n",
       "0              FDA15        9.300          Low Fat         0.016047   \n",
       "1              DRC01        5.920          Regular         0.019278   \n",
       "2              FDN15       17.500          Low Fat         0.016760   \n",
       "3              FDX07       19.200          Regular         0.000000   \n",
       "4              NCD19        8.930          Low Fat         0.000000   \n",
       "...              ...          ...              ...              ...   \n",
       "8518           FDF22        6.865          Low Fat         0.056783   \n",
       "8519           FDS36        8.380          Regular         0.046982   \n",
       "8520           NCJ29       10.600          Low Fat         0.035186   \n",
       "8521           FDN46        7.210          Regular         0.145221   \n",
       "8522           DRG01       14.800          Low Fat         0.044878   \n",
       "\n",
       "                  Item_Type  Item_MRP Outlet_Identifier  \\\n",
       "0                     Dairy  249.8092            OUT049   \n",
       "1               Soft Drinks   48.2692            OUT018   \n",
       "2                      Meat  141.6180            OUT049   \n",
       "3     Fruits and Vegetables  182.0950            OUT010   \n",
       "4                 Household   53.8614            OUT013   \n",
       "...                     ...       ...               ...   \n",
       "8518            Snack Foods  214.5218            OUT013   \n",
       "8519           Baking Goods  108.1570            OUT045   \n",
       "8520     Health and Hygiene   85.1224            OUT035   \n",
       "8521            Snack Foods  103.1332            OUT018   \n",
       "8522            Soft Drinks   75.4670            OUT046   \n",
       "\n",
       "      Outlet_Establishment_Year Outlet_Size Outlet_Location_Type  \\\n",
       "0                          1999      Medium               Tier 1   \n",
       "1                          2009      Medium               Tier 3   \n",
       "2                          1999      Medium               Tier 1   \n",
       "3                          1998         NaN               Tier 3   \n",
       "4                          1987        High               Tier 3   \n",
       "...                         ...         ...                  ...   \n",
       "8518                       1987        High               Tier 3   \n",
       "8519                       2002         NaN               Tier 2   \n",
       "8520                       2004       Small               Tier 2   \n",
       "8521                       2009      Medium               Tier 3   \n",
       "8522                       1997       Small               Tier 1   \n",
       "\n",
       "            Outlet_Type  Item_Outlet_Sales  \n",
       "0     Supermarket Type1          3735.1380  \n",
       "1     Supermarket Type2           443.4228  \n",
       "2     Supermarket Type1          2097.2700  \n",
       "3         Grocery Store           732.3800  \n",
       "4     Supermarket Type1           994.7052  \n",
       "...                 ...                ...  \n",
       "8518  Supermarket Type1          2778.3834  \n",
       "8519  Supermarket Type1           549.2850  \n",
       "8520  Supermarket Type1          1193.1136  \n",
       "8521  Supermarket Type2          1845.5976  \n",
       "8522  Supermarket Type1           765.6700  \n",
       "\n",
       "[8523 rows x 12 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(columns='meanwt', inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "14cd18c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     9.30000\n",
       "1     5.92000\n",
       "2    17.50000\n",
       "3    19.20000\n",
       "4     8.93000\n",
       "5    10.39500\n",
       "6    13.65000\n",
       "7    12.98788\n",
       "8    16.20000\n",
       "9    19.20000\n",
       "Name: Item_Weight, dtype: float64"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Item_Weight'].head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "ac2d266b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    20.750000\n",
       "1     8.300000\n",
       "2    14.600000\n",
       "3     7.315000\n",
       "4    13.426069\n",
       "5     9.800000\n",
       "6    19.350000\n",
       "7    12.277108\n",
       "8     6.305000\n",
       "9     5.985000\n",
       "Name: Item_Weight, dtype: float64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['Item_Weight'].head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c7b0e68",
   "metadata": {},
   "source": [
    "# Filling null values in Outlet_size"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f27af13c",
   "metadata": {},
   "source": [
    "# outlet_size data is categorical data.Therefore imputing the most frequent value of outlet_size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "271e87bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Medium    2793\n",
       "Small     2388\n",
       "High       932\n",
       "Name: Outlet_Size, dtype: int64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Outlet_Size'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "aa50db8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Medium    1862\n",
       "Small     1592\n",
       "High       621\n",
       "Name: Outlet_Size, dtype: int64"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['Outlet_Size'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "96d43e84",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Outlet_Size']=df['Outlet_Size'].fillna(df['Outlet_Size'].mode()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "b45166b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Outlet_Size']=df1['Outlet_Size'].fillna(df1['Outlet_Size'].mode()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "a827bd1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier              0\n",
       "Item_Weight                  0\n",
       "Item_Fat_Content             0\n",
       "Item_Visibility              0\n",
       "Item_Type                    0\n",
       "Item_MRP                     0\n",
       "Outlet_Identifier            0\n",
       "Outlet_Establishment_Year    0\n",
       "Outlet_Size                  0\n",
       "Outlet_Location_Type         0\n",
       "Outlet_Type                  0\n",
       "Item_Outlet_Sales            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "bef23239",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Identifier              0\n",
       "Item_Weight                  0\n",
       "Item_Fat_Content             0\n",
       "Item_Visibility              0\n",
       "Item_Type                    0\n",
       "Item_MRP                     0\n",
       "Outlet_Identifier            0\n",
       "Outlet_Establishment_Year    0\n",
       "Outlet_Size                  0\n",
       "Outlet_Location_Type         0\n",
       "Outlet_Type                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a149775",
   "metadata": {},
   "source": [
    "# Dropping Item_Identifier since it doesn't affect the target variable values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "53e2ef55",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns = ['Item_Identifier'],inplace=True)\n",
    "df1.drop(columns = ['Item_Identifier'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "04fe8179",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.300</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016047</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3735.1380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.920</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.019278</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>443.4228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.500</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.016760</td>\n",
       "      <td>Meat</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2097.2700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19.200</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Fruits and Vegetables</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>732.3800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.930</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Household</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>994.7052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8518</th>\n",
       "      <td>6.865</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.056783</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>214.5218</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>1987</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2778.3834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8519</th>\n",
       "      <td>8.380</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.046982</td>\n",
       "      <td>Baking Goods</td>\n",
       "      <td>108.1570</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>549.2850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8520</th>\n",
       "      <td>10.600</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.035186</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>85.1224</td>\n",
       "      <td>OUT035</td>\n",
       "      <td>2004</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>1193.1136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8521</th>\n",
       "      <td>7.210</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.145221</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>103.1332</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>1845.5976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8522</th>\n",
       "      <td>14.800</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.044878</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>75.4670</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>765.6700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8523 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Item_Weight Item_Fat_Content  Item_Visibility              Item_Type  \\\n",
       "0           9.300          Low Fat         0.016047                  Dairy   \n",
       "1           5.920          Regular         0.019278            Soft Drinks   \n",
       "2          17.500          Low Fat         0.016760                   Meat   \n",
       "3          19.200          Regular         0.000000  Fruits and Vegetables   \n",
       "4           8.930          Low Fat         0.000000              Household   \n",
       "...           ...              ...              ...                    ...   \n",
       "8518        6.865          Low Fat         0.056783            Snack Foods   \n",
       "8519        8.380          Regular         0.046982           Baking Goods   \n",
       "8520       10.600          Low Fat         0.035186     Health and Hygiene   \n",
       "8521        7.210          Regular         0.145221            Snack Foods   \n",
       "8522       14.800          Low Fat         0.044878            Soft Drinks   \n",
       "\n",
       "      Item_MRP Outlet_Identifier  Outlet_Establishment_Year Outlet_Size  \\\n",
       "0     249.8092            OUT049                       1999      Medium   \n",
       "1      48.2692            OUT018                       2009      Medium   \n",
       "2     141.6180            OUT049                       1999      Medium   \n",
       "3     182.0950            OUT010                       1998      Medium   \n",
       "4      53.8614            OUT013                       1987        High   \n",
       "...        ...               ...                        ...         ...   \n",
       "8518  214.5218            OUT013                       1987        High   \n",
       "8519  108.1570            OUT045                       2002      Medium   \n",
       "8520   85.1224            OUT035                       2004       Small   \n",
       "8521  103.1332            OUT018                       2009      Medium   \n",
       "8522   75.4670            OUT046                       1997       Small   \n",
       "\n",
       "     Outlet_Location_Type        Outlet_Type  Item_Outlet_Sales  \n",
       "0                  Tier 1  Supermarket Type1          3735.1380  \n",
       "1                  Tier 3  Supermarket Type2           443.4228  \n",
       "2                  Tier 1  Supermarket Type1          2097.2700  \n",
       "3                  Tier 3      Grocery Store           732.3800  \n",
       "4                  Tier 3  Supermarket Type1           994.7052  \n",
       "...                   ...                ...                ...  \n",
       "8518               Tier 3  Supermarket Type1          2778.3834  \n",
       "8519               Tier 2  Supermarket Type1           549.2850  \n",
       "8520               Tier 2  Supermarket Type1          1193.1136  \n",
       "8521               Tier 3  Supermarket Type2          1845.5976  \n",
       "8522               Tier 1  Supermarket Type1           765.6700  \n",
       "\n",
       "[8523 rows x 11 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "1397d0a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Establishment_Year</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20.750000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.007565</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>1999</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.300000</td>\n",
       "      <td>reg</td>\n",
       "      <td>0.038428</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14.600000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.099575</td>\n",
       "      <td>Others</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>1998</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.315000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.015388</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.426069</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.118599</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>1985</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5676</th>\n",
       "      <td>10.500000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.013496</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>141.3154</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>1997</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5677</th>\n",
       "      <td>7.600000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.142991</td>\n",
       "      <td>Starchy Foods</td>\n",
       "      <td>169.1448</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>2009</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5678</th>\n",
       "      <td>10.000000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.073529</td>\n",
       "      <td>Health and Hygiene</td>\n",
       "      <td>118.7440</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5679</th>\n",
       "      <td>15.300000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>Canned</td>\n",
       "      <td>214.6218</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>2007</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5680</th>\n",
       "      <td>9.500000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.104720</td>\n",
       "      <td>Canned</td>\n",
       "      <td>79.7960</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>2002</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5681 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Item_Weight Item_Fat_Content  Item_Visibility           Item_Type  \\\n",
       "0       20.750000          Low Fat         0.007565         Snack Foods   \n",
       "1        8.300000              reg         0.038428               Dairy   \n",
       "2       14.600000          Low Fat         0.099575              Others   \n",
       "3        7.315000          Low Fat         0.015388         Snack Foods   \n",
       "4       13.426069          Regular         0.118599               Dairy   \n",
       "...           ...              ...              ...                 ...   \n",
       "5676    10.500000          Regular         0.013496         Snack Foods   \n",
       "5677     7.600000          Regular         0.142991       Starchy Foods   \n",
       "5678    10.000000          Low Fat         0.073529  Health and Hygiene   \n",
       "5679    15.300000          Regular         0.000000              Canned   \n",
       "5680     9.500000          Regular         0.104720              Canned   \n",
       "\n",
       "      Item_MRP Outlet_Identifier  Outlet_Establishment_Year Outlet_Size  \\\n",
       "0     107.8622            OUT049                       1999      Medium   \n",
       "1      87.3198            OUT017                       2007      Medium   \n",
       "2     241.7538            OUT010                       1998      Medium   \n",
       "3     155.0340            OUT017                       2007      Medium   \n",
       "4     234.2300            OUT027                       1985      Medium   \n",
       "...        ...               ...                        ...         ...   \n",
       "5676  141.3154            OUT046                       1997       Small   \n",
       "5677  169.1448            OUT018                       2009      Medium   \n",
       "5678  118.7440            OUT045                       2002      Medium   \n",
       "5679  214.6218            OUT017                       2007      Medium   \n",
       "5680   79.7960            OUT045                       2002      Medium   \n",
       "\n",
       "     Outlet_Location_Type        Outlet_Type  \n",
       "0                  Tier 1  Supermarket Type1  \n",
       "1                  Tier 2  Supermarket Type1  \n",
       "2                  Tier 3      Grocery Store  \n",
       "3                  Tier 2  Supermarket Type1  \n",
       "4                  Tier 3  Supermarket Type3  \n",
       "...                   ...                ...  \n",
       "5676               Tier 1  Supermarket Type1  \n",
       "5677               Tier 3  Supermarket Type2  \n",
       "5678               Tier 2  Supermarket Type1  \n",
       "5679               Tier 2  Supermarket Type1  \n",
       "5680               Tier 2  Supermarket Type1  \n",
       "\n",
       "[5681 rows x 10 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7610e18",
   "metadata": {},
   "source": [
    "# ANALYSING FEATURES WITH CONTINEOUS DATA TYPE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "c5ae7ff4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Weight                   431\n",
       "Item_Fat_Content                5\n",
       "Item_Visibility              7880\n",
       "Item_Type                      16\n",
       "Item_MRP                     5938\n",
       "Outlet_Identifier              10\n",
       "Outlet_Establishment_Year       9\n",
       "Outlet_Size                     3\n",
       "Outlet_Location_Type            3\n",
       "Outlet_Type                     4\n",
       "Item_Outlet_Sales            3493\n",
       "dtype: int64"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "490dade8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Weight', ylabel='Density'>"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['Item_Weight'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "27232f9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Visibility', ylabel='Density'>"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['Item_Visibility'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ceafd723",
   "metadata": {},
   "source": [
    "Item_Visibility is rightly skewed data, hence outliers could be present in data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "568107ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.1670905496918396"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Item_Visibility.skew()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "db90dab5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "526"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df.Item_Visibility==0).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "b785e58f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Visibility'>"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(df['Item_Visibility'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad435735",
   "metadata": {},
   "source": [
    "OUTLIERS ARE PRESENT"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06682bb7",
   "metadata": {},
   "source": [
    "# REMOVING OUTLIERS BY UNSING Z-SCORE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "09e8d5a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfnew=df.Item_Visibility.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "c8f59de4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       0.016047\n",
       "1       0.019278\n",
       "2       0.016760\n",
       "3       0.000000\n",
       "4       0.000000\n",
       "          ...   \n",
       "8518    0.056783\n",
       "8519    0.046982\n",
       "8520    0.035186\n",
       "8521    0.145221\n",
       "8522    0.044878\n",
       "Name: Item_Visibility, Length: 8523, dtype: float64"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "3e333f39",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import zscore\n",
    "zscor=zscore(dfnew)\n",
    "z_score_abs=np.abs(zscor)\n",
    "\n",
    "dfnew2=dfnew[(z_score_abs<3)] # taking 3 as thresold value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "5214aaa4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8523,)"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "e75ebb66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8428,)"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew2.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "309446c5",
   "metadata": {},
   "source": [
    "DATA LOSS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "285e8f9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.1146309984747156"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(8523-8428)/8523*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "8b4ccbcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "dropindx=df.index.difference(dfnew2.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "9aa1d9cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(dropindx,inplace=True) # dropping the outliers from original features Dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "53a91656",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Visibility'>"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAWAAAAEHCAYAAACQkJyuAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAN1ElEQVR4nO3dfWxV933H8c8n2BhC2rGalBQn7EIN67qxTBmtqm2VmiiqWqQsi7SpXbsG7Ym1kxxvSqtUwgqiAq1TskzY2j9R/kBpq3StukxEoWu2Sk23tekCUUgozcgtMeGhPJRQ2gADDN/9cY8dYxu49r329/re90u6sn18zzm/+/PhzeHYPjgiBACYeddlDwAAWhUBBoAkBBgAkhBgAEhCgAEgSdtknrxo0aIolUrTNBQAaE47d+78aUTcOHb5pAJcKpW0Y8eO+o0KAFqA7f0TLecSBAAkIcAAkIQAA0ASAgwASQgwACQhwACQhAADQBICDABJCDAAJCHAAJCEAANAEgIMAEkIMAAkIcAAkIQAA0ASAgwASQgwACQhwACQhAADQJJJ/Z9wzWRgYEDlcjl7GJc5dOiQJKmrqyt5JNOju7tbPT092cMAGkbLBrhcLuvF3T/SxevfkT2UEXPOnJIkHTnXfF+WOWfeyB4C0HCa70/6JFy8/h06+5412cMYMf+V7ZLUUGOql+HXBuAtXAMGgCQEGACSEGAASEKAASAJAQaAJAQYAJIQYABIQoABIAkBBoAkBBgAkhBgAEhCgAEgCQEGgCQEGACSEGAASEKAASAJAQaAJAQYAJIQYABIQoABIAkBBoAkBBgAkhBgAEhCgAEgCQEGgCQEGACSEGAASEKAASAJAQaAJAQYAJIQYABIQoABIAkBBoAkBBgAkhBgAEhCgAEgCQEGgCQEGACSEGAASEKAASAJAQaAJDMS4IGBAQ0MDMzErgDMUq3YibaZ2Em5XJ6J3QCYxVqxE1yCAIAkBBgAkhBgAEhCgAEgCQEGgCQEGACSEGAASEKAASAJAQaAJAQYAJIQYABIQoABIAkBBoAkBBgAkhBgAEhCgAEgCQEGgCQEGACSEGAASEKAASAJAQaAJAQYAJIQYABIQoABIAkBBoAkBBgAkhBgAEhCgAEgCQEGgCQEGACSEGAASEKAASAJAQaAJAQYAJIQYABIQoABIAkBBoAkBBgAkrRlDwAAJOnChQt67bXXtG7dOl26dEnnz5/XgQMHNHfuXHV1dSkidPjwYUmSbd1yyy164IEH1N/fr/vuu0/9/f265557tHHjRtnWww8/rFKppPvvv1+Dg4Oyrba2Ng0NDWnu3LlavHixjh07poULF+rIkSNasmSJ2tradODAAT344IN68skntWHDBp08eVK9vb3asmWLuru76/qaCTCAhnD06FGdPXtWe/fuvWz5uXPntG/fvnHPf/XVV7Vp0ybt379/5O2ePXskSRGhDRs26I477tDg4ODIsgsXLoxs8/XXX5ckHTlyRJJG4i5Jmzdv1sWLF/X4449r165dOn36tDZt2qStW7fW9TVzCQJAuhMnTujEiROTXm9wcFARMfJ2aGho5HNvvvmmnnrqqSmNZ2hoSBGh7du3jwR8cHBQ5XJ5Stu7khk5Az506JDOnj2r3t7emdhdVcrlsq47H9nDaBnX/d/PVS7/oqGOATSOgwcPTst2I2r7Mz58xjys3mfB1zwDtr3O9g7bO44fP163HQPAsJMnT2YPoSrDZ8P1cs0z4Ih4VNKjkrR69eop/XXS1dUlSdqyZctUVp8Wvb292rnvaPYwWsaleW9X9/LFDXUMoHE88sgj2rZtW/YwrqlUKtV1e1wDBpBu7dq107Jd2zWt397eftnHfX19NW1vLAIMIF1nZ6c6OzsnvV6pVJLtkbdtbW/9o/6GG27QXXfdNaXxtLW1ybbWrFkzctZbKpXq/mNoBBhAQ1i8eLHmz5+vlStXqru7W0uXLpVtdXR0aPny5Vq2bJk6OjrU0dGhefPmacWKFerr69OqVatG3q5fv15S5cx348aNWrt27UhAbau9vX1km0uXLtW8efN00003SZKWLFkyss/169dr1apVuvfee9XX16cFCxbU/exX4ueAATSI9vZ2rVy5ctLfJ+jv77/s7e23337Z56f6UwvD2+ns7NTTTz89pW1cC2fAAJCEAANAEgIMAEkIMAAkIcAAkIQAA0ASAgwASQgwACQhwACQhAADQBICDABJCDAAJCHAAJCEAANAEgIMAEkIMAAkIcAAkIQAA0ASAgwASQgwACQhwACQhAADQBICDABJCDAAJCHAAJCEAANAEgIMAEkIMAAkIcAAkIQAA0ASAgwASQgwACQhwACQhAADQBICDABJCDAAJCHAAJCEAANAkraZ2El3d/dM7AbA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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(df['Item_Visibility'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9647be50",
   "metadata": {},
   "source": [
    "Some amount of outliers has been removed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "0a8a3ddb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Weight                  0.088761\n",
       "Item_Visibility              0.795956\n",
       "Item_MRP                     0.128945\n",
       "Outlet_Establishment_Year   -0.409186\n",
       "Item_Outlet_Sales            1.173070\n",
       "dtype: float64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.skew()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "52ac62b4",
   "metadata": {},
   "source": [
    "imputing 0 values using Simple Imputer and strategy=median"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "c6cdafde",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.impute import SimpleImputer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "5fedcb5a",
   "metadata": {},
   "outputs": [],
   "source": [
    "imputer=SimpleImputer(missing_values=0, strategy='median',verbose=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "5f1bcc1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "imputer=imputer.fit(df[['Item_Visibility']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "825fc648",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[['Item_Visibility']]=imputer.transform(df[['Item_Visibility']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "c7d2a364",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Weight                  0\n",
       "Item_Fat_Content             0\n",
       "Item_Visibility              0\n",
       "Item_Type                    0\n",
       "Item_MRP                     0\n",
       "Outlet_Identifier            0\n",
       "Outlet_Establishment_Year    0\n",
       "Outlet_Size                  0\n",
       "Outlet_Location_Type         0\n",
       "Outlet_Type                  0\n",
       "Item_Outlet_Sales            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df==0).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "cbff58dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "imputer=SimpleImputer(missing_values=0,strategy='median',verbose=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "29bcd8a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "imputer=imputer.fit(df1[['Item_Visibility']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "2aec7566",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1[['Item_Visibility']]=imputer.transform(df1[['Item_Visibility']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "f30aefbd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Weight                  0\n",
       "Item_Fat_Content             0\n",
       "Item_Visibility              0\n",
       "Item_Type                    0\n",
       "Item_MRP                     0\n",
       "Outlet_Identifier            0\n",
       "Outlet_Establishment_Year    0\n",
       "Outlet_Size                  0\n",
       "Outlet_Location_Type         0\n",
       "Outlet_Type                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df1==0).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "baf0d019",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.395046074467687"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.Item_Visibility.skew()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "f26254ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Visibility'>"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAWAAAAEHCAYAAACQkJyuAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAAR70lEQVR4nO3df2zc9X3H8dfbduI4TjuoQ6EJJEdieyQdYaJpNXXtdIE4/qXgTdpUlo4LZLPXRAohUqtVcNpIl2qd2DqxaP8g/oC0E92qipEIJyUMRseAFhslQNsMXZARhI1S09JSGI3jz/64+x5357NzP3z39iXPh3Sy7/v9fj6f9+fjy8tff8/+xkIIAgDUX5N3AQBwoSKAAcAJAQwATghgAHBCAAOAk5ZyDl6+fHmIxWI1KgUAzk/j4+M/DSFcUri9rACOxWIaGxubv6oA4AJgZq8U284lCABwQgADgBMCGACcEMAA4IQABgAnBDAAOCGAAcAJAQwATghgAHBCAAOAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnJT1f8I1igMHDiiVStWs/9OnT0uSVq5cWbMxStHZ2andu3e71gCgcudlAKdSKR1/8cc6u/QjNem/+d23JUn/+77f8jW/+5bb2ADmx3kZwJJ0dulH9N5VAzXpu+3kqCTVrP9yagDQuLgGDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMAE4IYABwQgADgBMCGACcEMAA4IQABgAnBDAAOCGAAcAJAQwATghgAHBCAAOAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMAE4IYABwQgADgBMCGACcEMAA4IQABgAnBDAAOCGAAcAJAQwATuoSwAcOHNCBAwfqMRRQFV6rqKeWegySSqXqMQxQNV6rqCcuQQCAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMAE4IYABwQgADgBMCGACcEMAA4IQABgAnBDAAOCGAAcAJAQwATghgAHBCAAOAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMFDh16pTi8bji8bg2bdqkLVu2aMeOHdq5c6cmJyc1OTmpW2+9ValUSjt27FA8Hldvb69SqZQmJyc1PDys3t5eXX/99YrH4+rp6VEqlcr2H7WP+tq2bVt2vN7eXg0PDyuVSml4eFh9fX1KJBLq7e1VT0+P4vG4brzxRvX39+uWW27Rjh071NfXp5GREU1OTiqVSqm/v18jIyNKpVIaGRnRli1bFI/HtX37do2Pj2twcFDj4+PatWuXRkZGNDw8rF27dmlsbEz9/f1KJBIaGBjQ448/ntdXbs3R/KNtkYceekjxeFzbtm3L254776jdY489puuuu0433XSTRkZGtHPnTqVSqWxd0fPccXfu3Kldu3Zlt0cfx8fH1dfXp/7+/ry1TqVSGhwczH5tCuvO3T+b3K/XfLMQQskHb9y4MYyNjZU9yJ49eyRJd999d9ltK7Fnzx6Nv/yG3rtqoCb9t50claSa9V9qDZ9Yc2nd1vRCsWfPHp04cWLW/UNDQwoh6PDhw1q9erUmJiay+2KxmDZs2KBDhw7NaBeLxXTfffdJkr7+9a/r8OHDuuGGGxRCmPX43L5LMTQ0pBMnTmTbFetj2bJleuedd7Ifi+2LtLS0aGpqKtvXK6+8kq05mn+0be/evZKkTZs2KcqUoaGh7PbceUftmpubs/3PNu/CcaO1irZHfbW3t2drz13rm2++WRMTE9mvTWHd0XrltimU+/XKnU85zGw8hLCxcHtLRb0B56lTp07NuX90dFRmphDCjHCbmJjQq6++WrTdxMSEUqmULr74Yh09elQhBB05ckRnzpyZ9fhyPfzww3mBVqyPKKQKw7fYtmJ9HTlyRJLy5n/06FElEgk9+eSTyj2hO3z4sBKJhDo6OjQ5OZmdd9SuMHyL1Zw77vT09Izt0cfc2qO1Ljzutddeyxt/dHQ0u/5Rm87Ozrzxc+uO5tnR0TGj7krVJYBPnz6t9957L3smXGupVEpNvy79zL4RNf3fL5RK/bJua3qhKBZMuc6cOSMzm3X/2bNnZ923f/9+bdiwIRskZ86cUTk/gZ5LsUCbb8W+YZw9e1YHDx6ccSY/PT2tgwcPau/evbr//vvzArSScctZq/3798/YVrg+hXPZv3//jLPg3LqjeVZ6FlzMOa8Bm9mImY2Z2dibb745bwMDjarS0JyYmNCjjz6aDYL5DN96CSHMqHtqakrHjh0rOp9jx45JUt68Kx23HBMTE2X/FFHs+Ny6o3nOp3OeAYcQ7pF0j5S+BlzJICtXrpRU/2vA57PpJR9WJ9eA5108Hj/nMdEliHJF1yFHR0c1NTVVcT+eorP/3LpbWlrU09OjQ4cOzZhPT0+PJGnz5s3ZeVc6bjlrFYvFJJV3KSdqkyu37mie84nfggByLFu2bM79ixYt0qJFi2bd39zcPOu+ZDKp7du3q6mpKdvXXJczytXSUvsrisXm39zcrEQiodtuuy1ve1NTkxKJhCTlzbvSccuZXzKZVDKZzNtW2L5wHoXHS/l1R/OcTwQwkGPt2rVz7h8YGFBfX5/MbMYZUywW0+DgYNF2sVhMnZ2d6ujoyLbv7+/X1q1bZz2+XIODg3ntivURfYMp9o2mcFtuYMVisWzNufM3M/X19amjo0NDQ0N531C2bt2afcMqd95Ru2KBWmxNo3EHBgZmbI8+5tYerXVnZ2e2v1gspoGBgbw2AwMDefsL34ArrDua53wigIECuf+YzUyLFy/WmjVrtG7dOiUSCW3fvl1XX321ksmk1qxZI0lqbW3NnuF2dXWptbU1eza8aNGivLOrqH3U14oVK7L7Wltb1dXVpWQyqa6uLi1ZskSrVq1Sa2tr9oztsssuU1tbm6688kqtWbNGS5YsUXd3txKJhJLJpNra2tTd3a1kMqnu7m4tXrxYkrR69Wrt27dP7e3t2rdvn9avX6/u7m51dXVp/fr1uvPOO9XW1qZVq1Zp6dKluuOOO/L6yq05mn+0LRKdBa9YsWLG2WJhu9tvv11NTU264oor1N3drXXr1imZTGbrip7njrtu3TqtX78+uz36uG/fPi1ZskRtbW15a51MJtXe3p792hTWnbt/Nrlfr/nG7wFXgN8DPn/V+7WKC8NsvwfMGTAAOCGAAcAJAQwATghgAHBCAAOAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMAE4IYABwQgADgBMCGACcEMAA4IQABgAnBDAAOCGAAcAJAQwATghgAHBCAAOAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnLTUY5DOzs56DANUjdcq6qkuAbx79+56DANUjdcq6olLEADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMAE4IYABwQgADgBMCGACcEMAA4IQABgAnBDAAOCGAAcAJAQwATghgAHBCAAOAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMAE4IYABwQgADgBMCGACctHgXUCvN776ltpOjNep7UpJq1n9pNbwl6VK38QFU77wM4M7Ozpr2f/r0lCRp5UrPALy05vMEUFvnZQDv3r3buwQAOCeuAQOAEwIYAJwQwADghAAGACcEMAA4IYABwAkBDABOCGAAcEIAA4ATAhgAnBDAAOCEAAYAJwQwADghgAHACQEMAE4IYABwQgADgBMCGACcEMAA4IQABgAnFkIo/WCzNyW9Ukb/yyX9tNyiFohGrl1q7PobuXapsetv5NqlhVv/6hDCJYUbywrgcpnZWAhhY80GqKFGrl1q7PobuXapsetv5NqlxqufSxAA4IQABgAntQ7ge2rcfy01cu1SY9ffyLVLjV1/I9cuNVj9Nb0GDACYHZcgAMAJAQwATioKYDPrM7P/NrOUmX25yH4zs3/M7H/ezK4ttW2tVVn7hJm9YGbHzWysvpVnazhX/VeZ2dNm9r6ZfbGctvVQZf2u619C7Z/PvGaeN7OnzOyaUtvWQ5X1L/S1H8rUfdzMxszsM6W2dRVCKOshqVnSKUlrJC2WdELS+oJjBiQdkWSSfkfS90ttW8tHNbVn9k1IWl6veius/6OSPinpq5K+WE7bhVy/9/qXWPunJV2c+bx/obzuq62/QdZ+mT54T2uDpJMLZe3nelRyBvwpSakQwsshhF9L+pakoYJjhiQdDGnPSLrIzD5WYttaqqb2heCc9YcQfhJCeFbSmXLb1kE19XsrpfanQgg/yzx9RtLlpbatg2rq91ZK7e+ETOJKapcUSm3rqZIAXinp1Zznr2W2lXJMKW1rqZrapfQX9REzGzezkZpVObtq1s977eejBs/1L7f2P1X6J6lK2tZCNfVLDbD2ZvYHZnZS0sOSdpTT1ktLBW2syLbC32Wb7ZhS2tZSNbVL0u+GEF43s49KOmZmJ0MI35vXCudWzfp5r/181OC5/iXXbmablA6w6DpkQ619kfqlBlj7EMKDkh40s9+T9NeSNpfa1kslZ8CvSboi5/nlkl4v8ZhS2tZSNbUrhBB9/ImkB5X+8aaeqlk/77Wvugbn9S+pdjPbIOleSUMhhMly2tZYNfU3xNpHMt8Y1prZ8nLb1l0FF8RbJL0s6Up9cFH74wXHDCr/jawflNq2lo8qa2+X9KGcz5+S1Fev2stdP0l3Kv9NONe1n4f6Xde/xNfOKkkpSZ+udN4LtP5GWPtOffAm3LWSTmf+Dbuv/Zxzq3BBBiS9pPS7i3dktn1B0hcyn5ukf8rsf0HSxrna1vmFWFHtSr+LeiLz+KFH7SXWf5nS3/V/Iennmc8/vBDWvpr6F8L6l1D7vZJ+Jul45jG2UF731dTfIGv/F5najkt6WtJnFtLaz/bgT5EBwAl/CQcATghgAHBCAAOAEwIYAJwQwADghAAGACcEMKpiZu9kPsbMbFsNx4mb2dMF21rM7A0z+5iZjZrZRXO0v9fM1ufWXOSYr5jZ5szn/2FmGzOfj5rZRZnHrnmbFC54BDDmS0xSzQJY0vckXW5msZxtmyW9GEL4nxDCQAjh57M1DiH8WQjhR3MNEEL4yxDCo0W2R31fJIkAxrwhgDFfvibps5kbYu81s2Yzu8vMns3cKPvPpeyZ7BNm9q9m9pKZfS1zI/AfZG74vbZY5yGEaUnflvS5nM03Snog0++EmS03s3Yze9jMTpjZi2b2ucz+7Blt5vnfm9lzZvbvZnZJZtt9ZvaHhWNHfWfmuDYzx7vM7BtmNpRz3D+b2Q1VriMuIAQw5suXJf1nCOG3Qwj/oPTdtN4OIXxS6RusD5vZlZljr5G0R9LVkm6S1B1C+JTSfwq7e44xHlA6dGVmrUr/iel3Co7pk/R6COGaEMJvSTpapJ92Sc+FEK6V9ISkvypjjqcyc/xSpt5bMvX8htI3NB8tsS+AAEbNbJGUMLPjkr4vqUNSV2bfs5nLBu8r/ff5j2S2v6D0pYyiQvpG7cvM7DeV/h8bngkf3EA88oKkzWb2t2b22RDC20W6mpb0L5nPv6n82y6WLITwhKTOzC0a/1jSd0IIU5X0hQtTJfcDBkphknaHEL6bt9EsLun9nE3TOc+nde7X5LeUPgtep8zlh1whhJfM7BNKnx3/jZk9EkL4yjn6rOaGKN+Q9PlMTTvOcSyQhzNgzJdfSvpQzvPvStppZoskycy6zax9HsZ5QNKfSLpO0qHCnWa2QtK7IYRvSvo7pW9NWKhJUnStd5ukJ0scu3COknSfpNskKYTwwxL7ASRxBoz587ykKTM7oXQo3a305YTnzMwkvSnp96sdJITwIzN7V9J4COFXRQ65WtJdZjat9P8rt7PIMb+S9HEzG5f0tvLf2Jtr7Ekz+y8ze1HSkRDCl0IIb5jZjyX9WyXzwYWN21ECVTCzpUpfd752luvNwKy4BAFUKPNHGyclHSB8UQnOgLHgmNkdkv6oYPO3Qwhf9agHqBUCGACccAkCAJwQwADghAAGACcEMAA4+X9hdYBUSHWlPQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(df1['Item_Visibility'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f33b5f8",
   "metadata": {},
   "source": [
    "Removing outliers by Z-SCORE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "97f2d2de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       0.007565\n",
       "1       0.038428\n",
       "2       0.099575\n",
       "3       0.015388\n",
       "4       0.118599\n",
       "          ...   \n",
       "5676    0.013496\n",
       "5677    0.142991\n",
       "5678    0.073529\n",
       "5679    0.057957\n",
       "5680    0.104720\n",
       "Name: Item_Visibility, Length: 5681, dtype: float64"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew=df1.Item_Visibility.copy()\n",
    "dfnew"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "d9f42445",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import zscore\n",
    "zscor=zscore(dfnew)\n",
    "z_score_abs=np.abs(zscor)\n",
    "\n",
    "dfnew2= dfnew[(z_score_abs < 3)] # taking 3 as thresold value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "9bf9e90a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5681,)"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "52b2042b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5594,)"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnew2.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d17a23e",
   "metadata": {},
   "source": [
    "loss %"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "fbebfea8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.531420524555536"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(5681-5594)/5681*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "f8eb4dcf",
   "metadata": {},
   "outputs": [],
   "source": [
    "dropindx=df1.index.difference(dfnew2.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "58104327",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.drop(dropindx,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "b2c32260",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5594, 10)"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "49109577",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.reset_index(drop=True,inplace=True)\n",
    "df1.reset_index(drop=True,inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54e6ba42",
   "metadata": {},
   "source": [
    "# REMOVING MORE SKEWNESS USING POWER TRANSFORMER;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "18cec662",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import PowerTransformer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "516933ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "Powertrans=PowerTransformer(method='yeo-johnson',standardize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "513548d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfnew1=df[['Item_Visibility']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "57f16d57",
   "metadata": {},
   "outputs": [],
   "source": [
    "transformed=Powertrans.fit_transform(dfnew1[['Item_Visibility']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "85ba52b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "transformed=pd.DataFrame(transformed,columns=dfnew1.columns)# to convert numpy array back into dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "e719c5d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Visibility    0.132488\n",
       "dtype: float64"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transformed.skew()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "bb06bacc",
   "metadata": {},
   "outputs": [],
   "source": [
    "transformed.index=df.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "af34e406",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[['Item_Visibility']]=transformed[['Item_Visibility']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "b735bf80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1324881487813592"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Item_Visibility.skew()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "233694ee",
   "metadata": {},
   "source": [
    "SKEWNESS HAS BEEN considerably reduced"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "5a8f2ed2",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfnew3=df1[['Item_Visibility']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "c024d95a",
   "metadata": {},
   "outputs": [],
   "source": [
    "transformed=Powertrans.fit_transform(dfnew3[['Item_Visibility']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "4b123928",
   "metadata": {},
   "outputs": [],
   "source": [
    "transformed=pd.DataFrame(transformed,columns=dfnew3.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "1b53a087",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Visibility    0.119684\n",
       "dtype: float64"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transformed.skew()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "906bae6a",
   "metadata": {},
   "outputs": [],
   "source": [
    "transformed.index = df1.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "f3f42c18",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1[['Item_Visibility']]= transformed[['Item_Visibility']]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "e2aa0da0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Weight                  0.121236\n",
       "Item_Visibility              0.119684\n",
       "Item_MRP                     0.133769\n",
       "Outlet_Establishment_Year   -0.412076\n",
       "dtype: float64"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.skew()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "376d0874",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_MRP', ylabel='Density'>"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['Item_MRP'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "1f8a358f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_MRP'>"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(df['Item_MRP'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f08b056c",
   "metadata": {},
   "source": [
    "No outliers present"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "115e5f27",
   "metadata": {},
   "source": [
    "# Analysing Outlet_Establishment_Year Feature\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "fe3e46f3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1985    1410\n",
       "1987     932\n",
       "1999     930\n",
       "1997     930\n",
       "2004     930\n",
       "2002     929\n",
       "2009     928\n",
       "2007     926\n",
       "1998     513\n",
       "Name: Outlet_Establishment_Year, dtype: int64"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Outlet_Establishment_Year.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "7329d574",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Outlet_Establishment_Year', ylabel='count'>"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df.Outlet_Establishment_Year)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9cf34378",
   "metadata": {},
   "source": [
    "Highest number of outlets were present in 1985, however, in 1987,1997,1999,2002,2004,2007,2009 are having similar no of outlets."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "982bd3c5",
   "metadata": {},
   "source": [
    "# Extracting the age of outlets from Outlet_Establishment_Year column will give a better insight into its relationship with target column data.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "015bb4fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Age']= df['Outlet_Establishment_Year'].apply(lambda y: 2021- y)\n",
    "df1['Age']= df1['Outlet_Establishment_Year'].apply(lambda x: 2021- x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "26ef41df",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Outlet_Establishment_Year'],inplace=True)\n",
    "df1.drop(columns=['Outlet_Establishment_Year'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "404e0c64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.30</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.442725</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3735.1380</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.92</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-1.309692</td>\n",
       "      <td>Soft Drinks</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>443.4228</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.50</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.412983</td>\n",
       "      <td>Meat</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2097.2700</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19.20</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Fruits and Vegetables</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>732.3800</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.93</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Household</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>994.7052</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Item_Weight Item_Fat_Content  Item_Visibility              Item_Type  \\\n",
       "0         9.30          Low Fat        -1.442725                  Dairy   \n",
       "1         5.92          Regular        -1.309692            Soft Drinks   \n",
       "2        17.50          Low Fat        -1.412983                   Meat   \n",
       "3        19.20          Regular        -0.051106  Fruits and Vegetables   \n",
       "4         8.93          Low Fat        -0.051106              Household   \n",
       "\n",
       "   Item_MRP Outlet_Identifier Outlet_Size Outlet_Location_Type  \\\n",
       "0  249.8092            OUT049      Medium               Tier 1   \n",
       "1   48.2692            OUT018      Medium               Tier 3   \n",
       "2  141.6180            OUT049      Medium               Tier 1   \n",
       "3  182.0950            OUT010      Medium               Tier 3   \n",
       "4   53.8614            OUT013        High               Tier 3   \n",
       "\n",
       "         Outlet_Type  Item_Outlet_Sales  Age  \n",
       "0  Supermarket Type1          3735.1380   22  \n",
       "1  Supermarket Type2           443.4228   12  \n",
       "2  Supermarket Type1          2097.2700   22  \n",
       "3      Grocery Store           732.3800   23  \n",
       "4  Supermarket Type1           994.7052   34  "
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "4e7b09e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20.750000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.833918</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.300000</td>\n",
       "      <td>reg</td>\n",
       "      <td>-0.608874</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14.600000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>0.930118</td>\n",
       "      <td>Others</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.315000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.485170</td>\n",
       "      <td>Snack Foods</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.426069</td>\n",
       "      <td>Regular</td>\n",
       "      <td>1.248922</td>\n",
       "      <td>Dairy</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Item_Weight Item_Fat_Content  Item_Visibility    Item_Type  Item_MRP  \\\n",
       "0    20.750000          Low Fat        -1.833918  Snack Foods  107.8622   \n",
       "1     8.300000              reg        -0.608874        Dairy   87.3198   \n",
       "2    14.600000          Low Fat         0.930118       Others  241.7538   \n",
       "3     7.315000          Low Fat        -1.485170  Snack Foods  155.0340   \n",
       "4    13.426069          Regular         1.248922        Dairy  234.2300   \n",
       "\n",
       "  Outlet_Identifier Outlet_Size Outlet_Location_Type        Outlet_Type  Age  \n",
       "0            OUT049      Medium               Tier 1  Supermarket Type1   22  \n",
       "1            OUT017      Medium               Tier 2  Supermarket Type1   14  \n",
       "2            OUT010      Medium               Tier 3      Grocery Store   23  \n",
       "3            OUT017      Medium               Tier 2  Supermarket Type1   14  \n",
       "4            OUT027      Medium               Tier 3  Supermarket Type3   36  "
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "5439274a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "36    1410\n",
       "34     932\n",
       "22     930\n",
       "24     930\n",
       "17     930\n",
       "19     929\n",
       "12     928\n",
       "14     926\n",
       "23     513\n",
       "Name: Age, dtype: int64"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Age.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "bea06d38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Age', ylabel='count'>"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df.Age)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8fb8a7e9",
   "metadata": {},
   "source": [
    "Highest number of outlet is 36 years old"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "b964233e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Low Fat', 'Regular', 'low fat', 'LF', 'reg'], dtype=object)"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Item_Fat_Content.unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08d951b5",
   "metadata": {},
   "source": [
    "2 unique categories : \"Low Fat\" and \"Regular\"\n",
    "'low fat'= \"Low Fat\"\n",
    "'LF'= \"Low Fat\"\n",
    "while 'reg' = \"Regular\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00383b72",
   "metadata": {},
   "source": [
    "MERGING SIMILAR VALUES WITH THE ORIGINAL CATEGORIES;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "0d98e287",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Item_Fat_Content'] = df['Item_Fat_Content'].replace({'reg':'Regular','low fat':'Low Fat','LF':'Low Fat'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "00d48c48",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Item_Fat_Content']=df1['Item_Fat_Content'].replace({'reg':'Regular','low fat':'Low Fat','LF':'Low Fat'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "2c2d7134",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Low Fat    5463\n",
       "Regular    2965\n",
       "Name: Item_Fat_Content, dtype: int64"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Item_Fat_Content.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "a4e1cfd8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Low Fat    3622\n",
       "Regular    1972\n",
       "Name: Item_Fat_Content, dtype: int64"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.Item_Fat_Content.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "3c91d82d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Fat_Content', ylabel='count'>"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df['Item_Fat_Content'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "d1cc3f06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Fruits and Vegetables    1218\n",
       "Snack Foods              1185\n",
       "Household                 903\n",
       "Frozen Foods              846\n",
       "Dairy                     672\n",
       "Canned                    644\n",
       "Baking Goods              640\n",
       "Health and Hygiene        517\n",
       "Soft Drinks               441\n",
       "Meat                      420\n",
       "Breads                    248\n",
       "Hard Drinks               212\n",
       "Others                    169\n",
       "Starchy Foods             145\n",
       "Breakfast                 107\n",
       "Seafood                    61\n",
       "Name: Item_Type, dtype: int64"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Item_Type.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "10e882d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Item_Type', ylabel='count'>"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1944x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(27,8))\n",
    "sns.countplot(df['Item_Type'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "3ba78e1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "tst=df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "a1f0e927",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Item_Type'] = df['Item_Type'].replace({'Dairy':'Foods','Soft Drinks':'Beverages','Meat':'Foods', 'Fruits and Vegetables':'Foods','Household':'Inedibles','Baking Goods':'Foods','Snack Foods':'Foods','Frozen Foods':'Foods','Breakfast':'Foods','Health and Hygiene':'Inedibles','Hard Drinks':'Beverages','Canned':'Foods','Breads':'Foods','Starchy Foods':'Foods','Others':'Inedibles','Seafood':'Foods'})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "e7c0a7aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Item_Type'] = df1['Item_Type'].replace({'Dairy':'Foods','Soft Drinks':'Beverages','Meat':'Foods', 'Fruits and Vegetables':'Foods','Household':'Inedibles','Baking Goods':'Foods','Snack Foods':'Foods','Frozen Foods':'Foods','Breakfast':'Foods','Health and Hygiene':'Inedibles','Hard Drinks':'Beverages','Canned':'Foods','Breads':'Foods','Starchy Foods':'Foods','Others':'Inedibles','Seafood':'Foods'})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "0f5abfff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.30</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.442725</td>\n",
       "      <td>Foods</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3735.1380</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.92</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-1.309692</td>\n",
       "      <td>Beverages</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>443.4228</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.50</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.412983</td>\n",
       "      <td>Foods</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2097.2700</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19.20</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Foods</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>732.3800</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.93</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Inedibles</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>994.7052</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Item_Weight Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0         9.30          Low Fat        -1.442725      Foods  249.8092   \n",
       "1         5.92          Regular        -1.309692  Beverages   48.2692   \n",
       "2        17.50          Low Fat        -1.412983      Foods  141.6180   \n",
       "3        19.20          Regular        -0.051106      Foods  182.0950   \n",
       "4         8.93          Low Fat        -0.051106  Inedibles   53.8614   \n",
       "\n",
       "  Outlet_Identifier Outlet_Size Outlet_Location_Type        Outlet_Type  \\\n",
       "0            OUT049      Medium               Tier 1  Supermarket Type1   \n",
       "1            OUT018      Medium               Tier 3  Supermarket Type2   \n",
       "2            OUT049      Medium               Tier 1  Supermarket Type1   \n",
       "3            OUT010      Medium               Tier 3      Grocery Store   \n",
       "4            OUT013        High               Tier 3  Supermarket Type1   \n",
       "\n",
       "   Item_Outlet_Sales  Age  \n",
       "0          3735.1380   22  \n",
       "1           443.4228   12  \n",
       "2          2097.2700   22  \n",
       "3           732.3800   23  \n",
       "4           994.7052   34  "
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc06f1d8",
   "metadata": {},
   "source": [
    "Successfully converted the Item_type categories into 'Foods','Beverages' and 'Inedibles'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d814504f",
   "metadata": {},
   "source": [
    "Item_Fat_Content Content is not applicable to inedibles, therefore creating a separte category for them under Item_Fat_Content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "8e74aef7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[df['Item_Type']=='Inedibles','Item_Fat_Content']='Inedible'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "613bb22c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.loc[df1['Item_Type']=='Inedibles', 'Item_Fat_Content']='Inedible'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "cf48b0d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.30000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.442725</td>\n",
       "      <td>Foods</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>3735.1380</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.92000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-1.309692</td>\n",
       "      <td>Beverages</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>443.4228</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.50000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.412983</td>\n",
       "      <td>Foods</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>2097.2700</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19.20000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Foods</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>732.3800</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.93000</td>\n",
       "      <td>Inedible</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Inedibles</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>994.7052</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10.39500</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Foods</td>\n",
       "      <td>51.4008</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>556.6088</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>13.65000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-1.583669</td>\n",
       "      <td>Foods</td>\n",
       "      <td>57.6588</td>\n",
       "      <td>OUT013</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>343.5528</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12.98788</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>1.334138</td>\n",
       "      <td>Foods</td>\n",
       "      <td>107.7622</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "      <td>4022.7636</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>16.20000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-1.416017</td>\n",
       "      <td>Foods</td>\n",
       "      <td>96.9726</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>1076.5986</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>19.20000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.804238</td>\n",
       "      <td>Foods</td>\n",
       "      <td>187.8214</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>4710.5350</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Item_Weight Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0      9.30000          Low Fat        -1.442725      Foods  249.8092   \n",
       "1      5.92000          Regular        -1.309692  Beverages   48.2692   \n",
       "2     17.50000          Low Fat        -1.412983      Foods  141.6180   \n",
       "3     19.20000          Regular        -0.051106      Foods  182.0950   \n",
       "4      8.93000         Inedible        -0.051106  Inedibles   53.8614   \n",
       "5     10.39500          Regular        -0.051106      Foods   51.4008   \n",
       "6     13.65000          Regular        -1.583669      Foods   57.6588   \n",
       "7     12.98788          Low Fat         1.334138      Foods  107.7622   \n",
       "8     16.20000          Regular        -1.416017      Foods   96.9726   \n",
       "9     19.20000          Regular         0.804238      Foods  187.8214   \n",
       "\n",
       "  Outlet_Identifier Outlet_Size Outlet_Location_Type        Outlet_Type  \\\n",
       "0            OUT049      Medium               Tier 1  Supermarket Type1   \n",
       "1            OUT018      Medium               Tier 3  Supermarket Type2   \n",
       "2            OUT049      Medium               Tier 1  Supermarket Type1   \n",
       "3            OUT010      Medium               Tier 3      Grocery Store   \n",
       "4            OUT013        High               Tier 3  Supermarket Type1   \n",
       "5            OUT018      Medium               Tier 3  Supermarket Type2   \n",
       "6            OUT013        High               Tier 3  Supermarket Type1   \n",
       "7            OUT027      Medium               Tier 3  Supermarket Type3   \n",
       "8            OUT045      Medium               Tier 2  Supermarket Type1   \n",
       "9            OUT017      Medium               Tier 2  Supermarket Type1   \n",
       "\n",
       "   Item_Outlet_Sales  Age  \n",
       "0          3735.1380   22  \n",
       "1           443.4228   12  \n",
       "2          2097.2700   22  \n",
       "3           732.3800   23  \n",
       "4           994.7052   34  \n",
       "5           556.6088   12  \n",
       "6           343.5528   34  \n",
       "7          4022.7636   36  \n",
       "8          1076.5986   19  \n",
       "9          4710.5350   14  "
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "16a96b2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Identifier</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Outlet_Type</th>\n",
       "      <th>Age</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20.750000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.833918</td>\n",
       "      <td>Foods</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>OUT049</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.300000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.608874</td>\n",
       "      <td>Foods</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14.600000</td>\n",
       "      <td>Inedible</td>\n",
       "      <td>0.930118</td>\n",
       "      <td>Inedibles</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>OUT010</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Grocery Store</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.315000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.485170</td>\n",
       "      <td>Foods</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.426069</td>\n",
       "      <td>Regular</td>\n",
       "      <td>1.248922</td>\n",
       "      <td>Foods</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>9.800000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.145161</td>\n",
       "      <td>Foods</td>\n",
       "      <td>117.1492</td>\n",
       "      <td>OUT046</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>19.350000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>0.591727</td>\n",
       "      <td>Foods</td>\n",
       "      <td>50.1034</td>\n",
       "      <td>OUT018</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type2</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12.277108</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.468349</td>\n",
       "      <td>Foods</td>\n",
       "      <td>81.0592</td>\n",
       "      <td>OUT027</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>Supermarket Type3</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>6.305000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>1.320125</td>\n",
       "      <td>Foods</td>\n",
       "      <td>95.7436</td>\n",
       "      <td>OUT045</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>5.985000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.921449</td>\n",
       "      <td>Foods</td>\n",
       "      <td>186.8924</td>\n",
       "      <td>OUT017</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>Supermarket Type1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Item_Weight Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0    20.750000          Low Fat        -1.833918      Foods  107.8622   \n",
       "1     8.300000          Regular        -0.608874      Foods   87.3198   \n",
       "2    14.600000         Inedible         0.930118  Inedibles  241.7538   \n",
       "3     7.315000          Low Fat        -1.485170      Foods  155.0340   \n",
       "4    13.426069          Regular         1.248922      Foods  234.2300   \n",
       "5     9.800000          Regular         0.145161      Foods  117.1492   \n",
       "6    19.350000          Regular         0.591727      Foods   50.1034   \n",
       "7    12.277108          Low Fat        -1.468349      Foods   81.0592   \n",
       "8     6.305000          Regular         1.320125      Foods   95.7436   \n",
       "9     5.985000          Low Fat        -1.921449      Foods  186.8924   \n",
       "\n",
       "  Outlet_Identifier Outlet_Size Outlet_Location_Type        Outlet_Type  Age  \n",
       "0            OUT049      Medium               Tier 1  Supermarket Type1   22  \n",
       "1            OUT017      Medium               Tier 2  Supermarket Type1   14  \n",
       "2            OUT010      Medium               Tier 3      Grocery Store   23  \n",
       "3            OUT017      Medium               Tier 2  Supermarket Type1   14  \n",
       "4            OUT027      Medium               Tier 3  Supermarket Type3   36  \n",
       "5            OUT046       Small               Tier 1  Supermarket Type1   24  \n",
       "6            OUT018      Medium               Tier 3  Supermarket Type2   12  \n",
       "7            OUT027      Medium               Tier 3  Supermarket Type3   36  \n",
       "8            OUT045      Medium               Tier 2  Supermarket Type1   19  \n",
       "9            OUT017      Medium               Tier 2  Supermarket Type1   14  "
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "ae2a261f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Medium    5161\n",
       "Small     2335\n",
       "High       932\n",
       "Name: Outlet_Size, dtype: int64"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Outlet_Size.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "24ea0153",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels='Medium','Small','High'\n",
    "fig,ax=plt.subplots()\n",
    "ax.pie(df.Outlet_Size.value_counts(),labels=labels,radius=1,autopct='%1.2f%%',shadow=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b1fc215",
   "metadata": {},
   "source": [
    "Medium Sized outlets form the majority with 61.05% of total outlets, Small outlets are 28.02% while High sized outlets are \n",
    "10.94% of the total outlets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "3f91bd70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Tier 3    3308\n",
       "Tier 2    2785\n",
       "Tier 1    2335\n",
       "Name: Outlet_Location_Type, dtype: int64"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Outlet_Location_Type.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "9afc352d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "labels='Tier 3','Tier 2','Tier 1'\n",
    "fig,ax=plt.subplots()\n",
    "ax.pie(df.Outlet_Location_Type.value_counts(),labels=labels,radius=1,autopct='%1.2f%%',shadow=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7134916",
   "metadata": {},
   "source": [
    "39.31% of total outlets are in Tier 3 cities, 32.68% of the outlets are in Tier 2 cities while 28.02% of the total outlets are in Tier 1 cities.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "9e120c02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Supermarket Type1    5577\n",
       "Grocery Store         988\n",
       "Supermarket Type3     935\n",
       "Supermarket Type2     928\n",
       "Name: Outlet_Type, dtype: int64"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Outlet_Type.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "8fd15e9b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Outlet_Type', ylabel='count'>"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df.Outlet_Type)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "545dd553",
   "metadata": {},
   "source": [
    "Highest number of outlets are of Supermarket type 1. while the rest are almost equally divided amongst Supermarket type 2,Supermarket type 3 and Grocery Store."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "c081966d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Item_Weight             0\n",
       "Item_Fat_Content        0\n",
       "Item_Visibility         0\n",
       "Item_Type               0\n",
       "Item_MRP                0\n",
       "Outlet_Identifier       0\n",
       "Outlet_Size             0\n",
       "Outlet_Location_Type    0\n",
       "Outlet_Type             0\n",
       "Item_Outlet_Sales       0\n",
       "Age                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd2f51c7",
   "metadata": {},
   "source": [
    "# Interpreting Relationship between Dependent variable and Independent Variables"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "efe92f2f",
   "metadata": {},
   "source": [
    "# 'Item_Outlet_Sales' VS 'Item_MRP'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "af8e0978",
   "metadata": {},
   "outputs": [],
   "source": [
    "X=df[['Item_Weight','Item_Visibility','Item_MRP']]\n",
    "y=df['Item_Outlet_Sales']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "8e45750c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1872 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(20,26),facecolor='white')\n",
    "plotnum=1\n",
    "for col in X:\n",
    "    if plotnum<=23:\n",
    "        plt.subplot(6,6,plotnum)\n",
    "        sns.scatterplot(X[col],y)\n",
    "        plt.xlabel(col,fontsize=20)\n",
    "        plt.ylabel('Item_Outlet_Sales',fontsize=20)\n",
    "        plotnum+=1  \n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3d7359f",
   "metadata": {},
   "source": [
    "From the graph above, it is observed that There is a positive linear relationship between Item_Outlet_Sales and Item_MRP\n",
    "\n",
    "'Item_Outlet_Sales' vs Categorical/Discrete Data Columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "1345e8a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1872 with 7 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(20,26),facecolor='white')\n",
    "plotnum=1\n",
    "y=df['Item_Outlet_Sales']\n",
    "X=df.drop(columns=['Item_Weight','Item_Visibility','Item_MRP','Item_Outlet_Sales'])\n",
    "for col in X:\n",
    "    if plotnum<=23:\n",
    "        plt.subplot(5,5,plotnum)\n",
    "        sns.scatterplot(X[col],y)\n",
    "        plt.xlabel(col,fontsize=20)\n",
    "        plt.ylabel('Item_Outlet_Sales',fontsize=20)\n",
    "   \n",
    "    plotnum+=1\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "049c7a1d",
   "metadata": {},
   "source": [
    "From the above graphs it is observed that Outlet_type has a positive relation with Item_Outlet_sales.\n",
    "\n",
    "Supermarket Type3 generates the more sales when compared to the Supermarket types 1 and 2 and Grocery Stores.\n",
    "\n",
    "Tier 3 City Outlets generate a lot of sales.\n",
    "\n",
    "Age of the establishment also plays an important role when age of the establishment is above 30. This maybe because Outlets that have been running for the longest sell the highest."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "f24e61a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Outlet_Location_Type', ylabel='Item_Outlet_Sales'>"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=df, x='Outlet_Location_Type', y='Item_Outlet_Sales',hue='Outlet_Type')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "22250c7a",
   "metadata": {},
   "source": [
    "From the graph it is observed that Tier 3 Cities generate the most sales and have a good mix of Supermarket Type 2 and Type 3 along with Grocery stores.\n",
    "\n",
    "Tier 2 and Tier 1 cities have more of Supermarket Type1 with a few Grocery stores.\n",
    "\n",
    "Outlet_Location_Type has a good relation with Item_Outlet_sales"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "c05eed65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Outlet_Size', ylabel='Item_Outlet_Sales'>"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=df, x='Outlet_Size',y='Item_Outlet_Sales',hue='Outlet_Type')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0da7ef8f",
   "metadata": {},
   "source": [
    "From the graph it is observed that  Medium Sized Outlets generate the Highest sales and are a mix of Supermaraket Type1,Type2,Type3 and Grocery Stores.\n",
    "\n",
    "High and small Sized Outlets comprise mostly of Supermarket Type1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bf59a6b",
   "metadata": {},
   "source": [
    "# Encoding Categorical Columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e7bbddc",
   "metadata": {},
   "source": [
    "# Encoding 'Outlet_Type','Outlet_Identifier' using get_dummies()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "dfb870db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>Outlet_Type_Supermarket Type1</th>\n",
       "      <th>Outlet_Type_Supermarket Type2</th>\n",
       "      <th>Outlet_Type_Supermarket Type3</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8423</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8424</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8425</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8426</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8427</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8428 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Outlet_Type_Grocery Store  Outlet_Type_Supermarket Type1  \\\n",
       "0                             0                              1   \n",
       "1                             0                              0   \n",
       "2                             0                              1   \n",
       "3                             1                              0   \n",
       "4                             0                              1   \n",
       "...                         ...                            ...   \n",
       "8423                          0                              1   \n",
       "8424                          0                              1   \n",
       "8425                          0                              1   \n",
       "8426                          0                              0   \n",
       "8427                          0                              1   \n",
       "\n",
       "      Outlet_Type_Supermarket Type2  Outlet_Type_Supermarket Type3  \\\n",
       "0                                 0                              0   \n",
       "1                                 1                              0   \n",
       "2                                 0                              0   \n",
       "3                                 0                              0   \n",
       "4                                 0                              0   \n",
       "...                             ...                            ...   \n",
       "8423                              0                              0   \n",
       "8424                              0                              0   \n",
       "8425                              0                              0   \n",
       "8426                              1                              0   \n",
       "8427                              0                              0   \n",
       "\n",
       "      Outlet_Identifier_OUT010  Outlet_Identifier_OUT013  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            1                         0   \n",
       "4                            0                         1   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         1   \n",
       "8424                         0                         0   \n",
       "8425                         0                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT017  Outlet_Identifier_OUT018  \\\n",
       "0                            0                         0   \n",
       "1                            0                         1   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         0                         0   \n",
       "8425                         0                         0   \n",
       "8426                         0                         1   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT019  Outlet_Identifier_OUT027  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         0                         0   \n",
       "8425                         0                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT035  Outlet_Identifier_OUT045  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         0                         1   \n",
       "8425                         1                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT046  Outlet_Identifier_OUT049  \n",
       "0                            0                         1  \n",
       "1                            0                         0  \n",
       "2                            0                         1  \n",
       "3                            0                         0  \n",
       "4                            0                         0  \n",
       "...                        ...                       ...  \n",
       "8423                         0                         0  \n",
       "8424                         0                         0  \n",
       "8425                         0                         0  \n",
       "8426                         0                         0  \n",
       "8427                         1                         0  \n",
       "\n",
       "[8428 rows x 14 columns]"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dumm=pd.get_dummies(df[['Outlet_Type','Outlet_Identifier']])\n",
    "dumm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "52c16c0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>Outlet_Type_Supermarket Type1</th>\n",
       "      <th>Outlet_Type_Supermarket Type2</th>\n",
       "      <th>Outlet_Type_Supermarket Type3</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5589</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5590</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5591</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5592</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5593</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5594 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Outlet_Type_Grocery Store  Outlet_Type_Supermarket Type1  \\\n",
       "0                             0                              1   \n",
       "1                             0                              1   \n",
       "2                             1                              0   \n",
       "3                             0                              1   \n",
       "4                             0                              0   \n",
       "...                         ...                            ...   \n",
       "5589                          0                              1   \n",
       "5590                          0                              0   \n",
       "5591                          0                              1   \n",
       "5592                          0                              1   \n",
       "5593                          0                              1   \n",
       "\n",
       "      Outlet_Type_Supermarket Type2  Outlet_Type_Supermarket Type3  \\\n",
       "0                                 0                              0   \n",
       "1                                 0                              0   \n",
       "2                                 0                              0   \n",
       "3                                 0                              0   \n",
       "4                                 0                              1   \n",
       "...                             ...                            ...   \n",
       "5589                              0                              0   \n",
       "5590                              1                              0   \n",
       "5591                              0                              0   \n",
       "5592                              0                              0   \n",
       "5593                              0                              0   \n",
       "\n",
       "      Outlet_Identifier_OUT010  Outlet_Identifier_OUT013  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            1                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         0   \n",
       "5590                         0                         0   \n",
       "5591                         0                         0   \n",
       "5592                         0                         0   \n",
       "5593                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT017  Outlet_Identifier_OUT018  \\\n",
       "0                            0                         0   \n",
       "1                            1                         0   \n",
       "2                            0                         0   \n",
       "3                            1                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         0   \n",
       "5590                         0                         1   \n",
       "5591                         0                         0   \n",
       "5592                         1                         0   \n",
       "5593                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT019  Outlet_Identifier_OUT027  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         1   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         0   \n",
       "5590                         0                         0   \n",
       "5591                         0                         0   \n",
       "5592                         0                         0   \n",
       "5593                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT035  Outlet_Identifier_OUT045  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         0   \n",
       "5590                         0                         0   \n",
       "5591                         0                         1   \n",
       "5592                         0                         0   \n",
       "5593                         0                         1   \n",
       "\n",
       "      Outlet_Identifier_OUT046  Outlet_Identifier_OUT049  \n",
       "0                            0                         1  \n",
       "1                            0                         0  \n",
       "2                            0                         0  \n",
       "3                            0                         0  \n",
       "4                            0                         0  \n",
       "...                        ...                       ...  \n",
       "5589                         1                         0  \n",
       "5590                         0                         0  \n",
       "5591                         0                         0  \n",
       "5592                         0                         0  \n",
       "5593                         0                         0  \n",
       "\n",
       "[5594 rows x 14 columns]"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dumm2=pd.get_dummies(df1[['Outlet_Type','Outlet_Identifier']],drop_first=False)\n",
    "dumm2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "5b47bcfa",
   "metadata": {},
   "outputs": [],
   "source": [
    "dmm=df.copy()\n",
    "dmm1=df1.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "4040260f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=df.join(dumm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "ee11b081",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Outlet_Type','Outlet_Identifier'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "87784681",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>...</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.300</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.442725</td>\n",
       "      <td>Foods</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>3735.1380</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.920</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-1.309692</td>\n",
       "      <td>Beverages</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>443.4228</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.500</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.412983</td>\n",
       "      <td>Foods</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>2097.2700</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19.200</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Foods</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>732.3800</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.930</td>\n",
       "      <td>Inedible</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>Inedibles</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>994.7052</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8423</th>\n",
       "      <td>6.865</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-0.054236</td>\n",
       "      <td>Foods</td>\n",
       "      <td>214.5218</td>\n",
       "      <td>High</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>2778.3834</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8424</th>\n",
       "      <td>8.380</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.336739</td>\n",
       "      <td>Foods</td>\n",
       "      <td>108.1570</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>549.2850</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8425</th>\n",
       "      <td>10.600</td>\n",
       "      <td>Inedible</td>\n",
       "      <td>-0.716902</td>\n",
       "      <td>Inedibles</td>\n",
       "      <td>85.1224</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>1193.1136</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8426</th>\n",
       "      <td>7.210</td>\n",
       "      <td>Regular</td>\n",
       "      <td>1.556591</td>\n",
       "      <td>Foods</td>\n",
       "      <td>103.1332</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>1845.5976</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8427</th>\n",
       "      <td>14.800</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-0.401193</td>\n",
       "      <td>Beverages</td>\n",
       "      <td>75.4670</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>765.6700</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8428 rows Ã— 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Item_Weight Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0           9.300          Low Fat        -1.442725      Foods  249.8092   \n",
       "1           5.920          Regular        -1.309692  Beverages   48.2692   \n",
       "2          17.500          Low Fat        -1.412983      Foods  141.6180   \n",
       "3          19.200          Regular        -0.051106      Foods  182.0950   \n",
       "4           8.930         Inedible        -0.051106  Inedibles   53.8614   \n",
       "...           ...              ...              ...        ...       ...   \n",
       "8423        6.865          Low Fat        -0.054236      Foods  214.5218   \n",
       "8424        8.380          Regular        -0.336739      Foods  108.1570   \n",
       "8425       10.600         Inedible        -0.716902  Inedibles   85.1224   \n",
       "8426        7.210          Regular         1.556591      Foods  103.1332   \n",
       "8427       14.800          Low Fat        -0.401193  Beverages   75.4670   \n",
       "\n",
       "     Outlet_Size Outlet_Location_Type  Item_Outlet_Sales  Age  \\\n",
       "0         Medium               Tier 1          3735.1380   22   \n",
       "1         Medium               Tier 3           443.4228   12   \n",
       "2         Medium               Tier 1          2097.2700   22   \n",
       "3         Medium               Tier 3           732.3800   23   \n",
       "4           High               Tier 3           994.7052   34   \n",
       "...          ...                  ...                ...  ...   \n",
       "8423        High               Tier 3          2778.3834   34   \n",
       "8424      Medium               Tier 2           549.2850   19   \n",
       "8425       Small               Tier 2          1193.1136   17   \n",
       "8426      Medium               Tier 3          1845.5976   12   \n",
       "8427       Small               Tier 1           765.6700   24   \n",
       "\n",
       "      Outlet_Type_Grocery Store  ...  Outlet_Identifier_OUT010  \\\n",
       "0                             0  ...                         0   \n",
       "1                             0  ...                         0   \n",
       "2                             0  ...                         0   \n",
       "3                             1  ...                         1   \n",
       "4                             0  ...                         0   \n",
       "...                         ...  ...                       ...   \n",
       "8423                          0  ...                         0   \n",
       "8424                          0  ...                         0   \n",
       "8425                          0  ...                         0   \n",
       "8426                          0  ...                         0   \n",
       "8427                          0  ...                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT013  Outlet_Identifier_OUT017  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            1                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         1                         0   \n",
       "8424                         0                         0   \n",
       "8425                         0                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT018  Outlet_Identifier_OUT019  \\\n",
       "0                            0                         0   \n",
       "1                            1                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         0                         0   \n",
       "8425                         0                         0   \n",
       "8426                         1                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT027  Outlet_Identifier_OUT035  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         0                         0   \n",
       "8425                         0                         1   \n",
       "8426                         0                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT045  Outlet_Identifier_OUT046  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         1                         0   \n",
       "8425                         0                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         1   \n",
       "\n",
       "      Outlet_Identifier_OUT049  \n",
       "0                            1  \n",
       "1                            0  \n",
       "2                            1  \n",
       "3                            0  \n",
       "4                            0  \n",
       "...                        ...  \n",
       "8423                         0  \n",
       "8424                         0  \n",
       "8425                         0  \n",
       "8426                         0  \n",
       "8427                         0  \n",
       "\n",
       "[8428 rows x 23 columns]"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "8721b815",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1=df1.join(dumm2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "047ed90b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>Outlet_Type_Supermarket Type1</th>\n",
       "      <th>...</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20.750000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.833918</td>\n",
       "      <td>Foods</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.300000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.608874</td>\n",
       "      <td>Foods</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14.600000</td>\n",
       "      <td>Inedible</td>\n",
       "      <td>0.930118</td>\n",
       "      <td>Inedibles</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.315000</td>\n",
       "      <td>Low Fat</td>\n",
       "      <td>-1.485170</td>\n",
       "      <td>Foods</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.426069</td>\n",
       "      <td>Regular</td>\n",
       "      <td>1.248922</td>\n",
       "      <td>Foods</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5589</th>\n",
       "      <td>10.500000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-1.566897</td>\n",
       "      <td>Foods</td>\n",
       "      <td>141.3154</td>\n",
       "      <td>Small</td>\n",
       "      <td>Tier 1</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5590</th>\n",
       "      <td>7.600000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>1.581831</td>\n",
       "      <td>Foods</td>\n",
       "      <td>169.1448</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 3</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5591</th>\n",
       "      <td>10.000000</td>\n",
       "      <td>Inedible</td>\n",
       "      <td>0.386391</td>\n",
       "      <td>Inedibles</td>\n",
       "      <td>118.7440</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5592</th>\n",
       "      <td>15.300000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>-0.012140</td>\n",
       "      <td>Foods</td>\n",
       "      <td>214.6218</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5593</th>\n",
       "      <td>9.500000</td>\n",
       "      <td>Regular</td>\n",
       "      <td>1.022162</td>\n",
       "      <td>Foods</td>\n",
       "      <td>79.7960</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Tier 2</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5594 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Item_Weight Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0       20.750000          Low Fat        -1.833918      Foods  107.8622   \n",
       "1        8.300000          Regular        -0.608874      Foods   87.3198   \n",
       "2       14.600000         Inedible         0.930118  Inedibles  241.7538   \n",
       "3        7.315000          Low Fat        -1.485170      Foods  155.0340   \n",
       "4       13.426069          Regular         1.248922      Foods  234.2300   \n",
       "...           ...              ...              ...        ...       ...   \n",
       "5589    10.500000          Regular        -1.566897      Foods  141.3154   \n",
       "5590     7.600000          Regular         1.581831      Foods  169.1448   \n",
       "5591    10.000000         Inedible         0.386391  Inedibles  118.7440   \n",
       "5592    15.300000          Regular        -0.012140      Foods  214.6218   \n",
       "5593     9.500000          Regular         1.022162      Foods   79.7960   \n",
       "\n",
       "     Outlet_Size Outlet_Location_Type  Age  Outlet_Type_Grocery Store  \\\n",
       "0         Medium               Tier 1   22                          0   \n",
       "1         Medium               Tier 2   14                          0   \n",
       "2         Medium               Tier 3   23                          1   \n",
       "3         Medium               Tier 2   14                          0   \n",
       "4         Medium               Tier 3   36                          0   \n",
       "...          ...                  ...  ...                        ...   \n",
       "5589       Small               Tier 1   24                          0   \n",
       "5590      Medium               Tier 3   12                          0   \n",
       "5591      Medium               Tier 2   19                          0   \n",
       "5592      Medium               Tier 2   14                          0   \n",
       "5593      Medium               Tier 2   19                          0   \n",
       "\n",
       "      Outlet_Type_Supermarket Type1  ...  Outlet_Identifier_OUT010  \\\n",
       "0                                 1  ...                         0   \n",
       "1                                 1  ...                         0   \n",
       "2                                 0  ...                         1   \n",
       "3                                 1  ...                         0   \n",
       "4                                 0  ...                         0   \n",
       "...                             ...  ...                       ...   \n",
       "5589                              1  ...                         0   \n",
       "5590                              0  ...                         0   \n",
       "5591                              1  ...                         0   \n",
       "5592                              1  ...                         0   \n",
       "5593                              1  ...                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT013  Outlet_Identifier_OUT017  \\\n",
       "0                            0                         0   \n",
       "1                            0                         1   \n",
       "2                            0                         0   \n",
       "3                            0                         1   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         0   \n",
       "5590                         0                         0   \n",
       "5591                         0                         0   \n",
       "5592                         0                         1   \n",
       "5593                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT018  Outlet_Identifier_OUT019  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         0   \n",
       "5590                         1                         0   \n",
       "5591                         0                         0   \n",
       "5592                         0                         0   \n",
       "5593                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT027  Outlet_Identifier_OUT035  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            1                         0   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         0   \n",
       "5590                         0                         0   \n",
       "5591                         0                         0   \n",
       "5592                         0                         0   \n",
       "5593                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT045  Outlet_Identifier_OUT046  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "5589                         0                         1   \n",
       "5590                         0                         0   \n",
       "5591                         1                         0   \n",
       "5592                         0                         0   \n",
       "5593                         1                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT049  \n",
       "0                            1  \n",
       "1                            0  \n",
       "2                            0  \n",
       "3                            0  \n",
       "4                            0  \n",
       "...                        ...  \n",
       "5589                         0  \n",
       "5590                         0  \n",
       "5591                         0  \n",
       "5592                         0  \n",
       "5593                         0  \n",
       "\n",
       "[5594 rows x 22 columns]"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.drop(columns=['Outlet_Type','Outlet_Identifier'],inplace=True)\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "7d1a4721",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Item_Fat_Content'] = df.Item_Fat_Content.map({'Inedible':1,'Low Fat':2,'Regular':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "77bcfba5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Item_Fat_Content'] = df1.Item_Fat_Content.map({'Inedible':1,'Low Fat':2,'Regular':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "f93c64d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Item_Type'] = df.Item_Type.map({'Inedibles':1,'Foods':2,'Beverages':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "e3c474fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Item_Type'] = df1.Item_Type.map({'Inedibles':1,'Foods':2,'Beverages':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "c3f6b735",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Outlet_Size'] = df.Outlet_Size.map({'Small':1,'Medium':2,'High':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "8e88900b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Outlet_Size'] = df1.Outlet_Size.map({'Small':1,'Medium':2,'High':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "c85d3a73",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Outlet_Location_Type'] = df.Outlet_Location_Type.map({'Tier 1':1,'Tier 2':2,'Tier 3':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "c45c2ad2",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Outlet_Location_Type'] = df1.Outlet_Location_Type.map({'Tier 1':1,'Tier 2':2,'Tier 3':3})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "8a853424",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>...</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.30000</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.442725</td>\n",
       "      <td>2</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3735.1380</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.92000</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.309692</td>\n",
       "      <td>3</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>443.4228</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.50000</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.412983</td>\n",
       "      <td>2</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2097.2700</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19.20000</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>2</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>732.3800</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.93000</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>1</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>994.7052</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10.39500</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>2</td>\n",
       "      <td>51.4008</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>556.6088</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>13.65000</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.583669</td>\n",
       "      <td>2</td>\n",
       "      <td>57.6588</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>343.5528</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12.98788</td>\n",
       "      <td>2</td>\n",
       "      <td>1.334138</td>\n",
       "      <td>2</td>\n",
       "      <td>107.7622</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4022.7636</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>16.20000</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.416017</td>\n",
       "      <td>2</td>\n",
       "      <td>96.9726</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1076.5986</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>19.20000</td>\n",
       "      <td>3</td>\n",
       "      <td>0.804238</td>\n",
       "      <td>2</td>\n",
       "      <td>187.8214</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4710.5350</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows Ã— 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Item_Weight  Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0      9.30000                 2        -1.442725          2  249.8092   \n",
       "1      5.92000                 3        -1.309692          3   48.2692   \n",
       "2     17.50000                 2        -1.412983          2  141.6180   \n",
       "3     19.20000                 3        -0.051106          2  182.0950   \n",
       "4      8.93000                 1        -0.051106          1   53.8614   \n",
       "5     10.39500                 3        -0.051106          2   51.4008   \n",
       "6     13.65000                 3        -1.583669          2   57.6588   \n",
       "7     12.98788                 2         1.334138          2  107.7622   \n",
       "8     16.20000                 3        -1.416017          2   96.9726   \n",
       "9     19.20000                 3         0.804238          2  187.8214   \n",
       "\n",
       "   Outlet_Size  Outlet_Location_Type  Item_Outlet_Sales  Age  \\\n",
       "0            2                     1          3735.1380   22   \n",
       "1            2                     3           443.4228   12   \n",
       "2            2                     1          2097.2700   22   \n",
       "3            2                     3           732.3800   23   \n",
       "4            3                     3           994.7052   34   \n",
       "5            2                     3           556.6088   12   \n",
       "6            3                     3           343.5528   34   \n",
       "7            2                     3          4022.7636   36   \n",
       "8            2                     2          1076.5986   19   \n",
       "9            2                     2          4710.5350   14   \n",
       "\n",
       "   Outlet_Type_Grocery Store  ...  Outlet_Identifier_OUT010  \\\n",
       "0                          0  ...                         0   \n",
       "1                          0  ...                         0   \n",
       "2                          0  ...                         0   \n",
       "3                          1  ...                         1   \n",
       "4                          0  ...                         0   \n",
       "5                          0  ...                         0   \n",
       "6                          0  ...                         0   \n",
       "7                          0  ...                         0   \n",
       "8                          0  ...                         0   \n",
       "9                          0  ...                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT013  Outlet_Identifier_OUT017  \\\n",
       "0                         0                         0   \n",
       "1                         0                         0   \n",
       "2                         0                         0   \n",
       "3                         0                         0   \n",
       "4                         1                         0   \n",
       "5                         0                         0   \n",
       "6                         1                         0   \n",
       "7                         0                         0   \n",
       "8                         0                         0   \n",
       "9                         0                         1   \n",
       "\n",
       "   Outlet_Identifier_OUT018  Outlet_Identifier_OUT019  \\\n",
       "0                         0                         0   \n",
       "1                         1                         0   \n",
       "2                         0                         0   \n",
       "3                         0                         0   \n",
       "4                         0                         0   \n",
       "5                         1                         0   \n",
       "6                         0                         0   \n",
       "7                         0                         0   \n",
       "8                         0                         0   \n",
       "9                         0                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT027  Outlet_Identifier_OUT035  \\\n",
       "0                         0                         0   \n",
       "1                         0                         0   \n",
       "2                         0                         0   \n",
       "3                         0                         0   \n",
       "4                         0                         0   \n",
       "5                         0                         0   \n",
       "6                         0                         0   \n",
       "7                         1                         0   \n",
       "8                         0                         0   \n",
       "9                         0                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT045  Outlet_Identifier_OUT046  \\\n",
       "0                         0                         0   \n",
       "1                         0                         0   \n",
       "2                         0                         0   \n",
       "3                         0                         0   \n",
       "4                         0                         0   \n",
       "5                         0                         0   \n",
       "6                         0                         0   \n",
       "7                         0                         0   \n",
       "8                         1                         0   \n",
       "9                         0                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT049  \n",
       "0                         1  \n",
       "1                         0  \n",
       "2                         1  \n",
       "3                         0  \n",
       "4                         0  \n",
       "5                         0  \n",
       "6                         0  \n",
       "7                         0  \n",
       "8                         0  \n",
       "9                         0  \n",
       "\n",
       "[10 rows x 23 columns]"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "c682ff4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>Outlet_Type_Supermarket Type1</th>\n",
       "      <th>...</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20.750000</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.833918</td>\n",
       "      <td>2</td>\n",
       "      <td>107.8622</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.300000</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.608874</td>\n",
       "      <td>2</td>\n",
       "      <td>87.3198</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14.600000</td>\n",
       "      <td>1</td>\n",
       "      <td>0.930118</td>\n",
       "      <td>1</td>\n",
       "      <td>241.7538</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.315000</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.485170</td>\n",
       "      <td>2</td>\n",
       "      <td>155.0340</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.426069</td>\n",
       "      <td>3</td>\n",
       "      <td>1.248922</td>\n",
       "      <td>2</td>\n",
       "      <td>234.2300</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>9.800000</td>\n",
       "      <td>3</td>\n",
       "      <td>0.145161</td>\n",
       "      <td>2</td>\n",
       "      <td>117.1492</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>19.350000</td>\n",
       "      <td>3</td>\n",
       "      <td>0.591727</td>\n",
       "      <td>2</td>\n",
       "      <td>50.1034</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12.277108</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.468349</td>\n",
       "      <td>2</td>\n",
       "      <td>81.0592</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>36</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>6.305000</td>\n",
       "      <td>3</td>\n",
       "      <td>1.320125</td>\n",
       "      <td>2</td>\n",
       "      <td>95.7436</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>5.985000</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.921449</td>\n",
       "      <td>2</td>\n",
       "      <td>186.8924</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Item_Weight  Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0    20.750000                 2        -1.833918          2  107.8622   \n",
       "1     8.300000                 3        -0.608874          2   87.3198   \n",
       "2    14.600000                 1         0.930118          1  241.7538   \n",
       "3     7.315000                 2        -1.485170          2  155.0340   \n",
       "4    13.426069                 3         1.248922          2  234.2300   \n",
       "5     9.800000                 3         0.145161          2  117.1492   \n",
       "6    19.350000                 3         0.591727          2   50.1034   \n",
       "7    12.277108                 2        -1.468349          2   81.0592   \n",
       "8     6.305000                 3         1.320125          2   95.7436   \n",
       "9     5.985000                 2        -1.921449          2  186.8924   \n",
       "\n",
       "   Outlet_Size  Outlet_Location_Type  Age  Outlet_Type_Grocery Store  \\\n",
       "0            2                     1   22                          0   \n",
       "1            2                     2   14                          0   \n",
       "2            2                     3   23                          1   \n",
       "3            2                     2   14                          0   \n",
       "4            2                     3   36                          0   \n",
       "5            1                     1   24                          0   \n",
       "6            2                     3   12                          0   \n",
       "7            2                     3   36                          0   \n",
       "8            2                     2   19                          0   \n",
       "9            2                     2   14                          0   \n",
       "\n",
       "   Outlet_Type_Supermarket Type1  ...  Outlet_Identifier_OUT010  \\\n",
       "0                              1  ...                         0   \n",
       "1                              1  ...                         0   \n",
       "2                              0  ...                         1   \n",
       "3                              1  ...                         0   \n",
       "4                              0  ...                         0   \n",
       "5                              1  ...                         0   \n",
       "6                              0  ...                         0   \n",
       "7                              0  ...                         0   \n",
       "8                              1  ...                         0   \n",
       "9                              1  ...                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT013  Outlet_Identifier_OUT017  \\\n",
       "0                         0                         0   \n",
       "1                         0                         1   \n",
       "2                         0                         0   \n",
       "3                         0                         1   \n",
       "4                         0                         0   \n",
       "5                         0                         0   \n",
       "6                         0                         0   \n",
       "7                         0                         0   \n",
       "8                         0                         0   \n",
       "9                         0                         1   \n",
       "\n",
       "   Outlet_Identifier_OUT018  Outlet_Identifier_OUT019  \\\n",
       "0                         0                         0   \n",
       "1                         0                         0   \n",
       "2                         0                         0   \n",
       "3                         0                         0   \n",
       "4                         0                         0   \n",
       "5                         0                         0   \n",
       "6                         1                         0   \n",
       "7                         0                         0   \n",
       "8                         0                         0   \n",
       "9                         0                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT027  Outlet_Identifier_OUT035  \\\n",
       "0                         0                         0   \n",
       "1                         0                         0   \n",
       "2                         0                         0   \n",
       "3                         0                         0   \n",
       "4                         1                         0   \n",
       "5                         0                         0   \n",
       "6                         0                         0   \n",
       "7                         1                         0   \n",
       "8                         0                         0   \n",
       "9                         0                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT045  Outlet_Identifier_OUT046  \\\n",
       "0                         0                         0   \n",
       "1                         0                         0   \n",
       "2                         0                         0   \n",
       "3                         0                         0   \n",
       "4                         0                         0   \n",
       "5                         0                         1   \n",
       "6                         0                         0   \n",
       "7                         0                         0   \n",
       "8                         1                         0   \n",
       "9                         0                         0   \n",
       "\n",
       "   Outlet_Identifier_OUT049  \n",
       "0                         1  \n",
       "1                         0  \n",
       "2                         0  \n",
       "3                         0  \n",
       "4                         0  \n",
       "5                         0  \n",
       "6                         0  \n",
       "7                         0  \n",
       "8                         0  \n",
       "9                         0  \n",
       "\n",
       "[10 rows x 22 columns]"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d926aebf",
   "metadata": {},
   "source": [
    "# All categorical columns have been encoded\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4df7a00f",
   "metadata": {},
   "source": [
    "# FINDING CORRELATION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "f2d13871",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>...</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Item_Weight</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.045034</td>\n",
       "      <td>-0.018078</td>\n",
       "      <td>-0.085976</td>\n",
       "      <td>0.025361</td>\n",
       "      <td>0.007040</td>\n",
       "      <td>0.004421</td>\n",
       "      <td>0.011071</td>\n",
       "      <td>0.008528</td>\n",
       "      <td>0.005884</td>\n",
       "      <td>...</td>\n",
       "      <td>0.006881</td>\n",
       "      <td>0.012003</td>\n",
       "      <td>-0.002897</td>\n",
       "      <td>0.000968</td>\n",
       "      <td>0.001073</td>\n",
       "      <td>-0.000954</td>\n",
       "      <td>-0.002682</td>\n",
       "      <td>-0.017554</td>\n",
       "      <td>0.000426</td>\n",
       "      <td>0.004628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <td>-0.045034</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.079416</td>\n",
       "      <td>0.595517</td>\n",
       "      <td>0.002461</td>\n",
       "      <td>0.000569</td>\n",
       "      <td>-0.003854</td>\n",
       "      <td>0.021665</td>\n",
       "      <td>-0.006646</td>\n",
       "      <td>-0.014052</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010909</td>\n",
       "      <td>-0.003253</td>\n",
       "      <td>0.004667</td>\n",
       "      <td>0.002903</td>\n",
       "      <td>-0.008292</td>\n",
       "      <td>0.001764</td>\n",
       "      <td>0.002200</td>\n",
       "      <td>-0.002999</td>\n",
       "      <td>-0.000442</td>\n",
       "      <td>0.009597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item_Visibility</th>\n",
       "      <td>-0.018078</td>\n",
       "      <td>0.079416</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.060248</td>\n",
       "      <td>-0.000300</td>\n",
       "      <td>-0.042087</td>\n",
       "      <td>-0.012939</td>\n",
       "      <td>-0.082427</td>\n",
       "      <td>0.036934</td>\n",
       "      <td>0.183355</td>\n",
       "      <td>...</td>\n",
       "      <td>0.123652</td>\n",
       "      <td>-0.027656</td>\n",
       "      <td>-0.016169</td>\n",
       "      <td>-0.016483</td>\n",
       "      <td>0.127573</td>\n",
       "      <td>-0.036528</td>\n",
       "      <td>-0.018895</td>\n",
       "      <td>-0.025616</td>\n",
       "      <td>-0.022097</td>\n",
       "      <td>-0.024756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item_Type</th>\n",
       "      <td>-0.085976</td>\n",
       "      <td>0.595517</td>\n",
       "      <td>0.060248</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.022711</td>\n",
       "      <td>0.003214</td>\n",
       "      <td>-0.003181</td>\n",
       "      <td>-0.001645</td>\n",
       "      <td>-0.011005</td>\n",
       "      <td>-0.015579</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008894</td>\n",
       "      <td>-0.003375</td>\n",
       "      <td>0.005153</td>\n",
       "      <td>-0.001458</td>\n",
       "      <td>-0.012511</td>\n",
       "      <td>-0.001621</td>\n",
       "      <td>0.006981</td>\n",
       "      <td>0.006148</td>\n",
       "      <td>-0.007305</td>\n",
       "      <td>0.011492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item_MRP</th>\n",
       "      <td>0.025361</td>\n",
       "      <td>0.002461</td>\n",
       "      <td>-0.000300</td>\n",
       "      <td>-0.022711</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.004075</td>\n",
       "      <td>0.003314</td>\n",
       "      <td>0.573491</td>\n",
       "      <td>-0.006989</td>\n",
       "      <td>-0.004335</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004372</td>\n",
       "      <td>0.002434</td>\n",
       "      <td>-0.008884</td>\n",
       "      <td>0.003855</td>\n",
       "      <td>-0.010579</td>\n",
       "      <td>-0.006773</td>\n",
       "      <td>0.012024</td>\n",
       "      <td>-0.000259</td>\n",
       "      <td>0.006001</td>\n",
       "      <td>-0.003949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Size</th>\n",
       "      <td>0.007040</td>\n",
       "      <td>0.000569</td>\n",
       "      <td>-0.042087</td>\n",
       "      <td>0.003214</td>\n",
       "      <td>-0.004075</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.610106</td>\n",
       "      <td>0.079486</td>\n",
       "      <td>0.209482</td>\n",
       "      <td>-0.190911</td>\n",
       "      <td>...</td>\n",
       "      <td>0.070642</td>\n",
       "      <td>0.685584</td>\n",
       "      <td>0.097486</td>\n",
       "      <td>0.097605</td>\n",
       "      <td>-0.339545</td>\n",
       "      <td>0.098018</td>\n",
       "      <td>-0.489311</td>\n",
       "      <td>0.097664</td>\n",
       "      <td>-0.489311</td>\n",
       "      <td>0.097723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <td>0.004421</td>\n",
       "      <td>-0.003854</td>\n",
       "      <td>-0.012939</td>\n",
       "      <td>-0.003181</td>\n",
       "      <td>0.003314</td>\n",
       "      <td>0.610106</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.087474</td>\n",
       "      <td>0.104085</td>\n",
       "      <td>-0.034632</td>\n",
       "      <td>...</td>\n",
       "      <td>0.277990</td>\n",
       "      <td>0.385026</td>\n",
       "      <td>-0.050070</td>\n",
       "      <td>0.384096</td>\n",
       "      <td>-0.336515</td>\n",
       "      <td>0.385722</td>\n",
       "      <td>-0.050192</td>\n",
       "      <td>-0.050161</td>\n",
       "      <td>-0.484944</td>\n",
       "      <td>-0.484944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item_Outlet_Sales</th>\n",
       "      <td>0.011071</td>\n",
       "      <td>0.021665</td>\n",
       "      <td>-0.082427</td>\n",
       "      <td>-0.001645</td>\n",
       "      <td>0.573491</td>\n",
       "      <td>0.079486</td>\n",
       "      <td>0.087474</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.060149</td>\n",
       "      <td>-0.398163</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.277934</td>\n",
       "      <td>0.020061</td>\n",
       "      <td>0.028579</td>\n",
       "      <td>-0.042619</td>\n",
       "      <td>-0.267263</td>\n",
       "      <td>0.309205</td>\n",
       "      <td>0.048931</td>\n",
       "      <td>-0.001990</td>\n",
       "      <td>0.015666</td>\n",
       "      <td>0.030235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>0.008528</td>\n",
       "      <td>-0.006646</td>\n",
       "      <td>0.036934</td>\n",
       "      <td>-0.011005</td>\n",
       "      <td>-0.006989</td>\n",
       "      <td>0.209482</td>\n",
       "      <td>0.104085</td>\n",
       "      <td>0.060149</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.268711</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.002690</td>\n",
       "      <td>0.460445</td>\n",
       "      <td>-0.382111</td>\n",
       "      <td>-0.466765</td>\n",
       "      <td>0.377621</td>\n",
       "      <td>0.545825</td>\n",
       "      <td>-0.256599</td>\n",
       "      <td>-0.172202</td>\n",
       "      <td>0.038426</td>\n",
       "      <td>-0.045867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <td>0.005884</td>\n",
       "      <td>-0.014052</td>\n",
       "      <td>0.183355</td>\n",
       "      <td>-0.015579</td>\n",
       "      <td>-0.004335</td>\n",
       "      <td>-0.190911</td>\n",
       "      <td>-0.034632</td>\n",
       "      <td>-0.398163</td>\n",
       "      <td>0.268711</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.698620</td>\n",
       "      <td>-0.128495</td>\n",
       "      <td>-0.128029</td>\n",
       "      <td>-0.128184</td>\n",
       "      <td>0.670640</td>\n",
       "      <td>-0.128727</td>\n",
       "      <td>-0.128340</td>\n",
       "      <td>-0.128262</td>\n",
       "      <td>-0.128340</td>\n",
       "      <td>-0.128340</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Type_Supermarket Type1</th>\n",
       "      <td>-0.004007</td>\n",
       "      <td>0.006463</td>\n",
       "      <td>-0.089516</td>\n",
       "      <td>0.012633</td>\n",
       "      <td>0.004893</td>\n",
       "      <td>0.000166</td>\n",
       "      <td>-0.486617</td>\n",
       "      <td>0.093672</td>\n",
       "      <td>-0.236203</td>\n",
       "      <td>-0.509675</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.356070</td>\n",
       "      <td>0.252111</td>\n",
       "      <td>0.251197</td>\n",
       "      <td>-0.491977</td>\n",
       "      <td>-0.341809</td>\n",
       "      <td>-0.494060</td>\n",
       "      <td>0.251807</td>\n",
       "      <td>0.251654</td>\n",
       "      <td>0.251807</td>\n",
       "      <td>0.251807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Type_Supermarket Type2</th>\n",
       "      <td>0.000968</td>\n",
       "      <td>0.002903</td>\n",
       "      <td>-0.016483</td>\n",
       "      <td>-0.001458</td>\n",
       "      <td>0.003855</td>\n",
       "      <td>0.097605</td>\n",
       "      <td>0.384096</td>\n",
       "      <td>-0.042619</td>\n",
       "      <td>-0.466765</td>\n",
       "      <td>-0.128184</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089552</td>\n",
       "      <td>-0.124033</td>\n",
       "      <td>-0.123583</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.085966</td>\n",
       "      <td>-0.124257</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.123808</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.123883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Type_Supermarket Type3</th>\n",
       "      <td>-0.000954</td>\n",
       "      <td>0.001764</td>\n",
       "      <td>-0.036528</td>\n",
       "      <td>-0.001621</td>\n",
       "      <td>-0.006773</td>\n",
       "      <td>0.098018</td>\n",
       "      <td>0.385722</td>\n",
       "      <td>0.309205</td>\n",
       "      <td>0.545825</td>\n",
       "      <td>-0.128727</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089931</td>\n",
       "      <td>-0.124558</td>\n",
       "      <td>-0.124107</td>\n",
       "      <td>-0.124257</td>\n",
       "      <td>-0.086330</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.124408</td>\n",
       "      <td>-0.124332</td>\n",
       "      <td>-0.124408</td>\n",
       "      <td>-0.124408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <td>0.006881</td>\n",
       "      <td>-0.010909</td>\n",
       "      <td>0.123652</td>\n",
       "      <td>-0.008894</td>\n",
       "      <td>0.004372</td>\n",
       "      <td>0.070642</td>\n",
       "      <td>0.277990</td>\n",
       "      <td>-0.277934</td>\n",
       "      <td>-0.002690</td>\n",
       "      <td>0.698620</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.089769</td>\n",
       "      <td>-0.089444</td>\n",
       "      <td>-0.089552</td>\n",
       "      <td>-0.062218</td>\n",
       "      <td>-0.089931</td>\n",
       "      <td>-0.089661</td>\n",
       "      <td>-0.089606</td>\n",
       "      <td>-0.089661</td>\n",
       "      <td>-0.089661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <td>0.012003</td>\n",
       "      <td>-0.003253</td>\n",
       "      <td>-0.027656</td>\n",
       "      <td>-0.003375</td>\n",
       "      <td>0.002434</td>\n",
       "      <td>0.685584</td>\n",
       "      <td>0.385026</td>\n",
       "      <td>0.020061</td>\n",
       "      <td>0.460445</td>\n",
       "      <td>-0.128495</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089769</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.124033</td>\n",
       "      <td>-0.086174</td>\n",
       "      <td>-0.124558</td>\n",
       "      <td>-0.124183</td>\n",
       "      <td>-0.124108</td>\n",
       "      <td>-0.124183</td>\n",
       "      <td>-0.124183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <td>-0.002897</td>\n",
       "      <td>0.004667</td>\n",
       "      <td>-0.016169</td>\n",
       "      <td>0.005153</td>\n",
       "      <td>-0.008884</td>\n",
       "      <td>0.097486</td>\n",
       "      <td>-0.050070</td>\n",
       "      <td>0.028579</td>\n",
       "      <td>-0.382111</td>\n",
       "      <td>-0.128029</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089444</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.123583</td>\n",
       "      <td>-0.085861</td>\n",
       "      <td>-0.124107</td>\n",
       "      <td>-0.123733</td>\n",
       "      <td>-0.123658</td>\n",
       "      <td>-0.123733</td>\n",
       "      <td>-0.123733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT018</th>\n",
       "      <td>0.000968</td>\n",
       "      <td>0.002903</td>\n",
       "      <td>-0.016483</td>\n",
       "      <td>-0.001458</td>\n",
       "      <td>0.003855</td>\n",
       "      <td>0.097605</td>\n",
       "      <td>0.384096</td>\n",
       "      <td>-0.042619</td>\n",
       "      <td>-0.466765</td>\n",
       "      <td>-0.128184</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089552</td>\n",
       "      <td>-0.124033</td>\n",
       "      <td>-0.123583</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.085966</td>\n",
       "      <td>-0.124257</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.123808</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.123883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <td>0.001073</td>\n",
       "      <td>-0.008292</td>\n",
       "      <td>0.127573</td>\n",
       "      <td>-0.012511</td>\n",
       "      <td>-0.010579</td>\n",
       "      <td>-0.339545</td>\n",
       "      <td>-0.336515</td>\n",
       "      <td>-0.267263</td>\n",
       "      <td>0.377621</td>\n",
       "      <td>0.670640</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.062218</td>\n",
       "      <td>-0.086174</td>\n",
       "      <td>-0.085861</td>\n",
       "      <td>-0.085966</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.086330</td>\n",
       "      <td>-0.086070</td>\n",
       "      <td>-0.086018</td>\n",
       "      <td>-0.086070</td>\n",
       "      <td>-0.086070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <td>-0.000954</td>\n",
       "      <td>0.001764</td>\n",
       "      <td>-0.036528</td>\n",
       "      <td>-0.001621</td>\n",
       "      <td>-0.006773</td>\n",
       "      <td>0.098018</td>\n",
       "      <td>0.385722</td>\n",
       "      <td>0.309205</td>\n",
       "      <td>0.545825</td>\n",
       "      <td>-0.128727</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089931</td>\n",
       "      <td>-0.124558</td>\n",
       "      <td>-0.124107</td>\n",
       "      <td>-0.124257</td>\n",
       "      <td>-0.086330</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.124408</td>\n",
       "      <td>-0.124332</td>\n",
       "      <td>-0.124408</td>\n",
       "      <td>-0.124408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <td>-0.002682</td>\n",
       "      <td>0.002200</td>\n",
       "      <td>-0.018895</td>\n",
       "      <td>0.006981</td>\n",
       "      <td>0.012024</td>\n",
       "      <td>-0.489311</td>\n",
       "      <td>-0.050192</td>\n",
       "      <td>0.048931</td>\n",
       "      <td>-0.256599</td>\n",
       "      <td>-0.128340</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089661</td>\n",
       "      <td>-0.124183</td>\n",
       "      <td>-0.123733</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.086070</td>\n",
       "      <td>-0.124408</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.123958</td>\n",
       "      <td>-0.124033</td>\n",
       "      <td>-0.124033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT045</th>\n",
       "      <td>-0.017554</td>\n",
       "      <td>-0.002999</td>\n",
       "      <td>-0.025616</td>\n",
       "      <td>0.006148</td>\n",
       "      <td>-0.000259</td>\n",
       "      <td>0.097664</td>\n",
       "      <td>-0.050161</td>\n",
       "      <td>-0.001990</td>\n",
       "      <td>-0.172202</td>\n",
       "      <td>-0.128262</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089606</td>\n",
       "      <td>-0.124108</td>\n",
       "      <td>-0.123658</td>\n",
       "      <td>-0.123808</td>\n",
       "      <td>-0.086018</td>\n",
       "      <td>-0.124332</td>\n",
       "      <td>-0.123958</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.123958</td>\n",
       "      <td>-0.123958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <td>0.000426</td>\n",
       "      <td>-0.000442</td>\n",
       "      <td>-0.022097</td>\n",
       "      <td>-0.007305</td>\n",
       "      <td>0.006001</td>\n",
       "      <td>-0.489311</td>\n",
       "      <td>-0.484944</td>\n",
       "      <td>0.015666</td>\n",
       "      <td>0.038426</td>\n",
       "      <td>-0.128340</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089661</td>\n",
       "      <td>-0.124183</td>\n",
       "      <td>-0.123733</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.086070</td>\n",
       "      <td>-0.124408</td>\n",
       "      <td>-0.124033</td>\n",
       "      <td>-0.123958</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.124033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "      <td>0.004628</td>\n",
       "      <td>0.009597</td>\n",
       "      <td>-0.024756</td>\n",
       "      <td>0.011492</td>\n",
       "      <td>-0.003949</td>\n",
       "      <td>0.097723</td>\n",
       "      <td>-0.484944</td>\n",
       "      <td>0.030235</td>\n",
       "      <td>-0.045867</td>\n",
       "      <td>-0.128340</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.089661</td>\n",
       "      <td>-0.124183</td>\n",
       "      <td>-0.123733</td>\n",
       "      <td>-0.123883</td>\n",
       "      <td>-0.086070</td>\n",
       "      <td>-0.124408</td>\n",
       "      <td>-0.124033</td>\n",
       "      <td>-0.123958</td>\n",
       "      <td>-0.124033</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>23 rows Ã— 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               Item_Weight  Item_Fat_Content  Item_Visibility  \\\n",
       "Item_Weight                       1.000000         -0.045034        -0.018078   \n",
       "Item_Fat_Content                 -0.045034          1.000000         0.079416   \n",
       "Item_Visibility                  -0.018078          0.079416         1.000000   \n",
       "Item_Type                        -0.085976          0.595517         0.060248   \n",
       "Item_MRP                          0.025361          0.002461        -0.000300   \n",
       "Outlet_Size                       0.007040          0.000569        -0.042087   \n",
       "Outlet_Location_Type              0.004421         -0.003854        -0.012939   \n",
       "Item_Outlet_Sales                 0.011071          0.021665        -0.082427   \n",
       "Age                               0.008528         -0.006646         0.036934   \n",
       "Outlet_Type_Grocery Store         0.005884         -0.014052         0.183355   \n",
       "Outlet_Type_Supermarket Type1    -0.004007          0.006463        -0.089516   \n",
       "Outlet_Type_Supermarket Type2     0.000968          0.002903        -0.016483   \n",
       "Outlet_Type_Supermarket Type3    -0.000954          0.001764        -0.036528   \n",
       "Outlet_Identifier_OUT010          0.006881         -0.010909         0.123652   \n",
       "Outlet_Identifier_OUT013          0.012003         -0.003253        -0.027656   \n",
       "Outlet_Identifier_OUT017         -0.002897          0.004667        -0.016169   \n",
       "Outlet_Identifier_OUT018          0.000968          0.002903        -0.016483   \n",
       "Outlet_Identifier_OUT019          0.001073         -0.008292         0.127573   \n",
       "Outlet_Identifier_OUT027         -0.000954          0.001764        -0.036528   \n",
       "Outlet_Identifier_OUT035         -0.002682          0.002200        -0.018895   \n",
       "Outlet_Identifier_OUT045         -0.017554         -0.002999        -0.025616   \n",
       "Outlet_Identifier_OUT046          0.000426         -0.000442        -0.022097   \n",
       "Outlet_Identifier_OUT049          0.004628          0.009597        -0.024756   \n",
       "\n",
       "                               Item_Type  Item_MRP  Outlet_Size  \\\n",
       "Item_Weight                    -0.085976  0.025361     0.007040   \n",
       "Item_Fat_Content                0.595517  0.002461     0.000569   \n",
       "Item_Visibility                 0.060248 -0.000300    -0.042087   \n",
       "Item_Type                       1.000000 -0.022711     0.003214   \n",
       "Item_MRP                       -0.022711  1.000000    -0.004075   \n",
       "Outlet_Size                     0.003214 -0.004075     1.000000   \n",
       "Outlet_Location_Type           -0.003181  0.003314     0.610106   \n",
       "Item_Outlet_Sales              -0.001645  0.573491     0.079486   \n",
       "Age                            -0.011005 -0.006989     0.209482   \n",
       "Outlet_Type_Grocery Store      -0.015579 -0.004335    -0.190911   \n",
       "Outlet_Type_Supermarket Type1   0.012633  0.004893     0.000166   \n",
       "Outlet_Type_Supermarket Type2  -0.001458  0.003855     0.097605   \n",
       "Outlet_Type_Supermarket Type3  -0.001621 -0.006773     0.098018   \n",
       "Outlet_Identifier_OUT010       -0.008894  0.004372     0.070642   \n",
       "Outlet_Identifier_OUT013       -0.003375  0.002434     0.685584   \n",
       "Outlet_Identifier_OUT017        0.005153 -0.008884     0.097486   \n",
       "Outlet_Identifier_OUT018       -0.001458  0.003855     0.097605   \n",
       "Outlet_Identifier_OUT019       -0.012511 -0.010579    -0.339545   \n",
       "Outlet_Identifier_OUT027       -0.001621 -0.006773     0.098018   \n",
       "Outlet_Identifier_OUT035        0.006981  0.012024    -0.489311   \n",
       "Outlet_Identifier_OUT045        0.006148 -0.000259     0.097664   \n",
       "Outlet_Identifier_OUT046       -0.007305  0.006001    -0.489311   \n",
       "Outlet_Identifier_OUT049        0.011492 -0.003949     0.097723   \n",
       "\n",
       "                               Outlet_Location_Type  Item_Outlet_Sales  \\\n",
       "Item_Weight                                0.004421           0.011071   \n",
       "Item_Fat_Content                          -0.003854           0.021665   \n",
       "Item_Visibility                           -0.012939          -0.082427   \n",
       "Item_Type                                 -0.003181          -0.001645   \n",
       "Item_MRP                                   0.003314           0.573491   \n",
       "Outlet_Size                                0.610106           0.079486   \n",
       "Outlet_Location_Type                       1.000000           0.087474   \n",
       "Item_Outlet_Sales                          0.087474           1.000000   \n",
       "Age                                        0.104085           0.060149   \n",
       "Outlet_Type_Grocery Store                 -0.034632          -0.398163   \n",
       "Outlet_Type_Supermarket Type1             -0.486617           0.093672   \n",
       "Outlet_Type_Supermarket Type2              0.384096          -0.042619   \n",
       "Outlet_Type_Supermarket Type3              0.385722           0.309205   \n",
       "Outlet_Identifier_OUT010                   0.277990          -0.277934   \n",
       "Outlet_Identifier_OUT013                   0.385026           0.020061   \n",
       "Outlet_Identifier_OUT017                  -0.050070           0.028579   \n",
       "Outlet_Identifier_OUT018                   0.384096          -0.042619   \n",
       "Outlet_Identifier_OUT019                  -0.336515          -0.267263   \n",
       "Outlet_Identifier_OUT027                   0.385722           0.309205   \n",
       "Outlet_Identifier_OUT035                  -0.050192           0.048931   \n",
       "Outlet_Identifier_OUT045                  -0.050161          -0.001990   \n",
       "Outlet_Identifier_OUT046                  -0.484944           0.015666   \n",
       "Outlet_Identifier_OUT049                  -0.484944           0.030235   \n",
       "\n",
       "                                    Age  Outlet_Type_Grocery Store  ...  \\\n",
       "Item_Weight                    0.008528                   0.005884  ...   \n",
       "Item_Fat_Content              -0.006646                  -0.014052  ...   \n",
       "Item_Visibility                0.036934                   0.183355  ...   \n",
       "Item_Type                     -0.011005                  -0.015579  ...   \n",
       "Item_MRP                      -0.006989                  -0.004335  ...   \n",
       "Outlet_Size                    0.209482                  -0.190911  ...   \n",
       "Outlet_Location_Type           0.104085                  -0.034632  ...   \n",
       "Item_Outlet_Sales              0.060149                  -0.398163  ...   \n",
       "Age                            1.000000                   0.268711  ...   \n",
       "Outlet_Type_Grocery Store      0.268711                   1.000000  ...   \n",
       "Outlet_Type_Supermarket Type1 -0.236203                  -0.509675  ...   \n",
       "Outlet_Type_Supermarket Type2 -0.466765                  -0.128184  ...   \n",
       "Outlet_Type_Supermarket Type3  0.545825                  -0.128727  ...   \n",
       "Outlet_Identifier_OUT010      -0.002690                   0.698620  ...   \n",
       "Outlet_Identifier_OUT013       0.460445                  -0.128495  ...   \n",
       "Outlet_Identifier_OUT017      -0.382111                  -0.128029  ...   \n",
       "Outlet_Identifier_OUT018      -0.466765                  -0.128184  ...   \n",
       "Outlet_Identifier_OUT019       0.377621                   0.670640  ...   \n",
       "Outlet_Identifier_OUT027       0.545825                  -0.128727  ...   \n",
       "Outlet_Identifier_OUT035      -0.256599                  -0.128340  ...   \n",
       "Outlet_Identifier_OUT045      -0.172202                  -0.128262  ...   \n",
       "Outlet_Identifier_OUT046       0.038426                  -0.128340  ...   \n",
       "Outlet_Identifier_OUT049      -0.045867                  -0.128340  ...   \n",
       "\n",
       "                               Outlet_Identifier_OUT010  \\\n",
       "Item_Weight                                    0.006881   \n",
       "Item_Fat_Content                              -0.010909   \n",
       "Item_Visibility                                0.123652   \n",
       "Item_Type                                     -0.008894   \n",
       "Item_MRP                                       0.004372   \n",
       "Outlet_Size                                    0.070642   \n",
       "Outlet_Location_Type                           0.277990   \n",
       "Item_Outlet_Sales                             -0.277934   \n",
       "Age                                           -0.002690   \n",
       "Outlet_Type_Grocery Store                      0.698620   \n",
       "Outlet_Type_Supermarket Type1                 -0.356070   \n",
       "Outlet_Type_Supermarket Type2                 -0.089552   \n",
       "Outlet_Type_Supermarket Type3                 -0.089931   \n",
       "Outlet_Identifier_OUT010                       1.000000   \n",
       "Outlet_Identifier_OUT013                      -0.089769   \n",
       "Outlet_Identifier_OUT017                      -0.089444   \n",
       "Outlet_Identifier_OUT018                      -0.089552   \n",
       "Outlet_Identifier_OUT019                      -0.062218   \n",
       "Outlet_Identifier_OUT027                      -0.089931   \n",
       "Outlet_Identifier_OUT035                      -0.089661   \n",
       "Outlet_Identifier_OUT045                      -0.089606   \n",
       "Outlet_Identifier_OUT046                      -0.089661   \n",
       "Outlet_Identifier_OUT049                      -0.089661   \n",
       "\n",
       "                               Outlet_Identifier_OUT013  \\\n",
       "Item_Weight                                    0.012003   \n",
       "Item_Fat_Content                              -0.003253   \n",
       "Item_Visibility                               -0.027656   \n",
       "Item_Type                                     -0.003375   \n",
       "Item_MRP                                       0.002434   \n",
       "Outlet_Size                                    0.685584   \n",
       "Outlet_Location_Type                           0.385026   \n",
       "Item_Outlet_Sales                              0.020061   \n",
       "Age                                            0.460445   \n",
       "Outlet_Type_Grocery Store                     -0.128495   \n",
       "Outlet_Type_Supermarket Type1                  0.252111   \n",
       "Outlet_Type_Supermarket Type2                 -0.124033   \n",
       "Outlet_Type_Supermarket Type3                 -0.124558   \n",
       "Outlet_Identifier_OUT010                      -0.089769   \n",
       "Outlet_Identifier_OUT013                       1.000000   \n",
       "Outlet_Identifier_OUT017                      -0.123883   \n",
       "Outlet_Identifier_OUT018                      -0.124033   \n",
       "Outlet_Identifier_OUT019                      -0.086174   \n",
       "Outlet_Identifier_OUT027                      -0.124558   \n",
       "Outlet_Identifier_OUT035                      -0.124183   \n",
       "Outlet_Identifier_OUT045                      -0.124108   \n",
       "Outlet_Identifier_OUT046                      -0.124183   \n",
       "Outlet_Identifier_OUT049                      -0.124183   \n",
       "\n",
       "                               Outlet_Identifier_OUT017  \\\n",
       "Item_Weight                                   -0.002897   \n",
       "Item_Fat_Content                               0.004667   \n",
       "Item_Visibility                               -0.016169   \n",
       "Item_Type                                      0.005153   \n",
       "Item_MRP                                      -0.008884   \n",
       "Outlet_Size                                    0.097486   \n",
       "Outlet_Location_Type                          -0.050070   \n",
       "Item_Outlet_Sales                              0.028579   \n",
       "Age                                           -0.382111   \n",
       "Outlet_Type_Grocery Store                     -0.128029   \n",
       "Outlet_Type_Supermarket Type1                  0.251197   \n",
       "Outlet_Type_Supermarket Type2                 -0.123583   \n",
       "Outlet_Type_Supermarket Type3                 -0.124107   \n",
       "Outlet_Identifier_OUT010                      -0.089444   \n",
       "Outlet_Identifier_OUT013                      -0.123883   \n",
       "Outlet_Identifier_OUT017                       1.000000   \n",
       "Outlet_Identifier_OUT018                      -0.123583   \n",
       "Outlet_Identifier_OUT019                      -0.085861   \n",
       "Outlet_Identifier_OUT027                      -0.124107   \n",
       "Outlet_Identifier_OUT035                      -0.123733   \n",
       "Outlet_Identifier_OUT045                      -0.123658   \n",
       "Outlet_Identifier_OUT046                      -0.123733   \n",
       "Outlet_Identifier_OUT049                      -0.123733   \n",
       "\n",
       "                               Outlet_Identifier_OUT018  \\\n",
       "Item_Weight                                    0.000968   \n",
       "Item_Fat_Content                               0.002903   \n",
       "Item_Visibility                               -0.016483   \n",
       "Item_Type                                     -0.001458   \n",
       "Item_MRP                                       0.003855   \n",
       "Outlet_Size                                    0.097605   \n",
       "Outlet_Location_Type                           0.384096   \n",
       "Item_Outlet_Sales                             -0.042619   \n",
       "Age                                           -0.466765   \n",
       "Outlet_Type_Grocery Store                     -0.128184   \n",
       "Outlet_Type_Supermarket Type1                 -0.491977   \n",
       "Outlet_Type_Supermarket Type2                  1.000000   \n",
       "Outlet_Type_Supermarket Type3                 -0.124257   \n",
       "Outlet_Identifier_OUT010                      -0.089552   \n",
       "Outlet_Identifier_OUT013                      -0.124033   \n",
       "Outlet_Identifier_OUT017                      -0.123583   \n",
       "Outlet_Identifier_OUT018                       1.000000   \n",
       "Outlet_Identifier_OUT019                      -0.085966   \n",
       "Outlet_Identifier_OUT027                      -0.124257   \n",
       "Outlet_Identifier_OUT035                      -0.123883   \n",
       "Outlet_Identifier_OUT045                      -0.123808   \n",
       "Outlet_Identifier_OUT046                      -0.123883   \n",
       "Outlet_Identifier_OUT049                      -0.123883   \n",
       "\n",
       "                               Outlet_Identifier_OUT019  \\\n",
       "Item_Weight                                    0.001073   \n",
       "Item_Fat_Content                              -0.008292   \n",
       "Item_Visibility                                0.127573   \n",
       "Item_Type                                     -0.012511   \n",
       "Item_MRP                                      -0.010579   \n",
       "Outlet_Size                                   -0.339545   \n",
       "Outlet_Location_Type                          -0.336515   \n",
       "Item_Outlet_Sales                             -0.267263   \n",
       "Age                                            0.377621   \n",
       "Outlet_Type_Grocery Store                      0.670640   \n",
       "Outlet_Type_Supermarket Type1                 -0.341809   \n",
       "Outlet_Type_Supermarket Type2                 -0.085966   \n",
       "Outlet_Type_Supermarket Type3                 -0.086330   \n",
       "Outlet_Identifier_OUT010                      -0.062218   \n",
       "Outlet_Identifier_OUT013                      -0.086174   \n",
       "Outlet_Identifier_OUT017                      -0.085861   \n",
       "Outlet_Identifier_OUT018                      -0.085966   \n",
       "Outlet_Identifier_OUT019                       1.000000   \n",
       "Outlet_Identifier_OUT027                      -0.086330   \n",
       "Outlet_Identifier_OUT035                      -0.086070   \n",
       "Outlet_Identifier_OUT045                      -0.086018   \n",
       "Outlet_Identifier_OUT046                      -0.086070   \n",
       "Outlet_Identifier_OUT049                      -0.086070   \n",
       "\n",
       "                               Outlet_Identifier_OUT027  \\\n",
       "Item_Weight                                   -0.000954   \n",
       "Item_Fat_Content                               0.001764   \n",
       "Item_Visibility                               -0.036528   \n",
       "Item_Type                                     -0.001621   \n",
       "Item_MRP                                      -0.006773   \n",
       "Outlet_Size                                    0.098018   \n",
       "Outlet_Location_Type                           0.385722   \n",
       "Item_Outlet_Sales                              0.309205   \n",
       "Age                                            0.545825   \n",
       "Outlet_Type_Grocery Store                     -0.128727   \n",
       "Outlet_Type_Supermarket Type1                 -0.494060   \n",
       "Outlet_Type_Supermarket Type2                 -0.124257   \n",
       "Outlet_Type_Supermarket Type3                  1.000000   \n",
       "Outlet_Identifier_OUT010                      -0.089931   \n",
       "Outlet_Identifier_OUT013                      -0.124558   \n",
       "Outlet_Identifier_OUT017                      -0.124107   \n",
       "Outlet_Identifier_OUT018                      -0.124257   \n",
       "Outlet_Identifier_OUT019                      -0.086330   \n",
       "Outlet_Identifier_OUT027                       1.000000   \n",
       "Outlet_Identifier_OUT035                      -0.124408   \n",
       "Outlet_Identifier_OUT045                      -0.124332   \n",
       "Outlet_Identifier_OUT046                      -0.124408   \n",
       "Outlet_Identifier_OUT049                      -0.124408   \n",
       "\n",
       "                               Outlet_Identifier_OUT035  \\\n",
       "Item_Weight                                   -0.002682   \n",
       "Item_Fat_Content                               0.002200   \n",
       "Item_Visibility                               -0.018895   \n",
       "Item_Type                                      0.006981   \n",
       "Item_MRP                                       0.012024   \n",
       "Outlet_Size                                   -0.489311   \n",
       "Outlet_Location_Type                          -0.050192   \n",
       "Item_Outlet_Sales                              0.048931   \n",
       "Age                                           -0.256599   \n",
       "Outlet_Type_Grocery Store                     -0.128340   \n",
       "Outlet_Type_Supermarket Type1                  0.251807   \n",
       "Outlet_Type_Supermarket Type2                 -0.123883   \n",
       "Outlet_Type_Supermarket Type3                 -0.124408   \n",
       "Outlet_Identifier_OUT010                      -0.089661   \n",
       "Outlet_Identifier_OUT013                      -0.124183   \n",
       "Outlet_Identifier_OUT017                      -0.123733   \n",
       "Outlet_Identifier_OUT018                      -0.123883   \n",
       "Outlet_Identifier_OUT019                      -0.086070   \n",
       "Outlet_Identifier_OUT027                      -0.124408   \n",
       "Outlet_Identifier_OUT035                       1.000000   \n",
       "Outlet_Identifier_OUT045                      -0.123958   \n",
       "Outlet_Identifier_OUT046                      -0.124033   \n",
       "Outlet_Identifier_OUT049                      -0.124033   \n",
       "\n",
       "                               Outlet_Identifier_OUT045  \\\n",
       "Item_Weight                                   -0.017554   \n",
       "Item_Fat_Content                              -0.002999   \n",
       "Item_Visibility                               -0.025616   \n",
       "Item_Type                                      0.006148   \n",
       "Item_MRP                                      -0.000259   \n",
       "Outlet_Size                                    0.097664   \n",
       "Outlet_Location_Type                          -0.050161   \n",
       "Item_Outlet_Sales                             -0.001990   \n",
       "Age                                           -0.172202   \n",
       "Outlet_Type_Grocery Store                     -0.128262   \n",
       "Outlet_Type_Supermarket Type1                  0.251654   \n",
       "Outlet_Type_Supermarket Type2                 -0.123808   \n",
       "Outlet_Type_Supermarket Type3                 -0.124332   \n",
       "Outlet_Identifier_OUT010                      -0.089606   \n",
       "Outlet_Identifier_OUT013                      -0.124108   \n",
       "Outlet_Identifier_OUT017                      -0.123658   \n",
       "Outlet_Identifier_OUT018                      -0.123808   \n",
       "Outlet_Identifier_OUT019                      -0.086018   \n",
       "Outlet_Identifier_OUT027                      -0.124332   \n",
       "Outlet_Identifier_OUT035                      -0.123958   \n",
       "Outlet_Identifier_OUT045                       1.000000   \n",
       "Outlet_Identifier_OUT046                      -0.123958   \n",
       "Outlet_Identifier_OUT049                      -0.123958   \n",
       "\n",
       "                               Outlet_Identifier_OUT046  \\\n",
       "Item_Weight                                    0.000426   \n",
       "Item_Fat_Content                              -0.000442   \n",
       "Item_Visibility                               -0.022097   \n",
       "Item_Type                                     -0.007305   \n",
       "Item_MRP                                       0.006001   \n",
       "Outlet_Size                                   -0.489311   \n",
       "Outlet_Location_Type                          -0.484944   \n",
       "Item_Outlet_Sales                              0.015666   \n",
       "Age                                            0.038426   \n",
       "Outlet_Type_Grocery Store                     -0.128340   \n",
       "Outlet_Type_Supermarket Type1                  0.251807   \n",
       "Outlet_Type_Supermarket Type2                 -0.123883   \n",
       "Outlet_Type_Supermarket Type3                 -0.124408   \n",
       "Outlet_Identifier_OUT010                      -0.089661   \n",
       "Outlet_Identifier_OUT013                      -0.124183   \n",
       "Outlet_Identifier_OUT017                      -0.123733   \n",
       "Outlet_Identifier_OUT018                      -0.123883   \n",
       "Outlet_Identifier_OUT019                      -0.086070   \n",
       "Outlet_Identifier_OUT027                      -0.124408   \n",
       "Outlet_Identifier_OUT035                      -0.124033   \n",
       "Outlet_Identifier_OUT045                      -0.123958   \n",
       "Outlet_Identifier_OUT046                       1.000000   \n",
       "Outlet_Identifier_OUT049                      -0.124033   \n",
       "\n",
       "                               Outlet_Identifier_OUT049  \n",
       "Item_Weight                                    0.004628  \n",
       "Item_Fat_Content                               0.009597  \n",
       "Item_Visibility                               -0.024756  \n",
       "Item_Type                                      0.011492  \n",
       "Item_MRP                                      -0.003949  \n",
       "Outlet_Size                                    0.097723  \n",
       "Outlet_Location_Type                          -0.484944  \n",
       "Item_Outlet_Sales                              0.030235  \n",
       "Age                                           -0.045867  \n",
       "Outlet_Type_Grocery Store                     -0.128340  \n",
       "Outlet_Type_Supermarket Type1                  0.251807  \n",
       "Outlet_Type_Supermarket Type2                 -0.123883  \n",
       "Outlet_Type_Supermarket Type3                 -0.124408  \n",
       "Outlet_Identifier_OUT010                      -0.089661  \n",
       "Outlet_Identifier_OUT013                      -0.124183  \n",
       "Outlet_Identifier_OUT017                      -0.123733  \n",
       "Outlet_Identifier_OUT018                      -0.123883  \n",
       "Outlet_Identifier_OUT019                      -0.086070  \n",
       "Outlet_Identifier_OUT027                      -0.124408  \n",
       "Outlet_Identifier_OUT035                      -0.124033  \n",
       "Outlet_Identifier_OUT045                      -0.123958  \n",
       "Outlet_Identifier_OUT046                      -0.124033  \n",
       "Outlet_Identifier_OUT049                       1.000000  \n",
       "\n",
       "[23 rows x 23 columns]"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d_corr=df.corr()\n",
    "d_corr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "3b86c1cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1152 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,16))\n",
    "sns.heatmap(d_corr,annot=True,linewidth=1)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54cf939e",
   "metadata": {},
   "source": [
    "# Visualizing correlation of feature columns with label column.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "724b9c28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (20,8))\n",
    "df.corr()['Item_Outlet_Sales'].sort_values(ascending = False).drop(['Item_Outlet_Sales']).plot(kind='bar',color = 'c')\n",
    "plt.xlabel('Features',fontsize=15)\n",
    "plt.ylabel('Item_Outlet_Sales',fontsize=15)\n",
    "plt.title('correlation',fontsize = 18)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31c5484d",
   "metadata": {},
   "source": [
    "Item_MRP has the highest positive correlation with Item_Outlet_Sales, followed by Outlet_Type_Supermarket Type3 and Outlet_Identifier_OUT027.\n",
    "\n",
    "Outlet_Type_Grocery Store has highest negative correlation with Item_Outlet_sales followed by Outlet_Identifier_OUT010 and Outlet_Identifier_OUT019"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0756ca07",
   "metadata": {},
   "source": [
    "# Feature Selection\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "f769cdc2",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "343815ea",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=df.drop(columns=['Item_Outlet_Sales'])       \n",
    "y=df['Item_Outlet_Sales']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "cbf18380",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler=StandardScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "2db1fe51",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaled_x = scaler.fit_transform(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab9fc974",
   "metadata": {},
   "source": [
    "# Checking for Multicollinearity using Variance Inflation Factor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "55dc52d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "from statsmodels.stats.outliers_influence import variance_inflation_factor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "a95cce41",
   "metadata": {},
   "outputs": [],
   "source": [
    "vif=pd.DataFrame()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "f5db0ee7",
   "metadata": {},
   "outputs": [],
   "source": [
    "vif['Features']= x.columns\n",
    "vif['vif']=[variance_inflation_factor(scaled_x,i) for i in range(scaled_x.shape[1])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "23be5eb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Features</th>\n",
       "      <th>vif</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Item_Weight</td>\n",
       "      <td>1.008727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Item_Fat_Content</td>\n",
       "      <td>1.555450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Item_Visibility</td>\n",
       "      <td>1.042941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Item_Type</td>\n",
       "      <td>1.560243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Item_MRP</td>\n",
       "      <td>1.001892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Outlet_Size</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Outlet_Location_Type</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Age</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Outlet_Type_Grocery Store</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Outlet_Type_Supermarket Type1</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Outlet_Type_Supermarket Type2</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Outlet_Type_Supermarket Type3</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Outlet_Identifier_OUT010</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Outlet_Identifier_OUT013</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Outlet_Identifier_OUT017</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Outlet_Identifier_OUT018</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Outlet_Identifier_OUT019</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Outlet_Identifier_OUT027</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Outlet_Identifier_OUT035</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Outlet_Identifier_OUT045</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Outlet_Identifier_OUT046</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Outlet_Identifier_OUT049</td>\n",
       "      <td>inf</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Features       vif\n",
       "0                     Item_Weight  1.008727\n",
       "1                Item_Fat_Content  1.555450\n",
       "2                 Item_Visibility  1.042941\n",
       "3                       Item_Type  1.560243\n",
       "4                        Item_MRP  1.001892\n",
       "5                     Outlet_Size       inf\n",
       "6            Outlet_Location_Type       inf\n",
       "7                             Age       inf\n",
       "8       Outlet_Type_Grocery Store       inf\n",
       "9   Outlet_Type_Supermarket Type1       inf\n",
       "10  Outlet_Type_Supermarket Type2       inf\n",
       "11  Outlet_Type_Supermarket Type3       inf\n",
       "12       Outlet_Identifier_OUT010       inf\n",
       "13       Outlet_Identifier_OUT013       inf\n",
       "14       Outlet_Identifier_OUT017       inf\n",
       "15       Outlet_Identifier_OUT018       inf\n",
       "16       Outlet_Identifier_OUT019       inf\n",
       "17       Outlet_Identifier_OUT027       inf\n",
       "18       Outlet_Identifier_OUT035       inf\n",
       "19       Outlet_Identifier_OUT045       inf\n",
       "20       Outlet_Identifier_OUT046       inf\n",
       "21       Outlet_Identifier_OUT049       inf"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "e514b343",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler=StandardScaler()\n",
    "scaled_X_test=scaler.fit_transform(df1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "7bc86e6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.87892119, -0.222286  , -1.8339182 , ..., -0.35273518,\n",
       "        -0.35305548,  2.83241604],\n",
       "       [-1.03759252,  1.165513  , -0.60887447, ..., -0.35273518,\n",
       "        -0.35305548, -0.35305548],\n",
       "       [ 0.4382337 , -1.610085  ,  0.93011846, ..., -0.35273518,\n",
       "        -0.35305548, -0.35305548],\n",
       "       ...,\n",
       "       [-0.6393537 , -1.610085  ,  0.38639056, ...,  2.83498795,\n",
       "        -0.35305548, -0.35305548],\n",
       "       [ 0.60221439,  1.165513  , -0.01214013, ..., -0.35273518,\n",
       "        -0.35305548, -0.35305548],\n",
       "       [-0.75648276,  1.165513  ,  1.02216198, ...,  2.83498795,\n",
       "        -0.35305548, -0.35305548]])"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaled_X_test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3408af5f",
   "metadata": {},
   "source": [
    "# Selecting Kbest Features\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "cf0d4ea4",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_selection import SelectKBest, f_classif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "259e90f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "bestfeat=SelectKBest(score_func=f_classif,k=22)\n",
    "fit=bestfeat.fit(x,y)\n",
    "df4scores=pd.DataFrame(fit.scores_)\n",
    "df5columns=pd.DataFrame(x.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "1eabf0a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                          Feature     Score\n",
      "8       Outlet_Type_Grocery Store  4.241044\n",
      "4                        Item_MRP  3.501741\n",
      "16       Outlet_Identifier_OUT019  1.782798\n",
      "12       Outlet_Identifier_OUT010  1.780568\n",
      "11  Outlet_Type_Supermarket Type3  1.751242\n",
      "17       Outlet_Identifier_OUT027  1.751242\n",
      "9   Outlet_Type_Supermarket Type1  1.586932\n",
      "7                             Age  1.214545\n",
      "2                 Item_Visibility  1.161522\n",
      "1                Item_Fat_Content  1.112132\n",
      "3                       Item_Type  1.071789\n",
      "0                     Item_Weight  1.041603\n",
      "6            Outlet_Location_Type  1.035315\n",
      "5                     Outlet_Size  1.004025\n",
      "18       Outlet_Identifier_OUT035  1.000072\n",
      "20       Outlet_Identifier_OUT046  0.984630\n",
      "13       Outlet_Identifier_OUT013  0.984232\n",
      "21       Outlet_Identifier_OUT049  0.981800\n",
      "14       Outlet_Identifier_OUT017  0.939199\n",
      "10  Outlet_Type_Supermarket Type2  0.891431\n",
      "15       Outlet_Identifier_OUT018  0.891431\n",
      "19       Outlet_Identifier_OUT045  0.870091\n"
     ]
    }
   ],
   "source": [
    "fit=bestfeat.fit(x,y)\n",
    "df4scores=pd.DataFrame(fit.scores_)\n",
    "df5columns=pd.DataFrame(x.columns)\n",
    "df5columns.head()\n",
    "featureScores=pd.concat([df5columns,df4scores],axis=1)\n",
    "featureScores.columns=['Feature','Score']\n",
    "print(featureScores.nlargest(22,'Score'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d370c53e",
   "metadata": {},
   "source": [
    "Selecting the best features based on scores above"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "d644cd94",
   "metadata": {},
   "outputs": [],
   "source": [
    "Xbest=x.drop(columns=['Outlet_Identifier_OUT018','Outlet_Identifier_OUT045'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "3f1d1a9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Item_Weight</th>\n",
       "      <th>Item_Fat_Content</th>\n",
       "      <th>Item_Visibility</th>\n",
       "      <th>Item_Type</th>\n",
       "      <th>Item_MRP</th>\n",
       "      <th>Outlet_Size</th>\n",
       "      <th>Outlet_Location_Type</th>\n",
       "      <th>Age</th>\n",
       "      <th>Outlet_Type_Grocery Store</th>\n",
       "      <th>Outlet_Type_Supermarket Type1</th>\n",
       "      <th>Outlet_Type_Supermarket Type2</th>\n",
       "      <th>Outlet_Type_Supermarket Type3</th>\n",
       "      <th>Outlet_Identifier_OUT010</th>\n",
       "      <th>Outlet_Identifier_OUT013</th>\n",
       "      <th>Outlet_Identifier_OUT017</th>\n",
       "      <th>Outlet_Identifier_OUT019</th>\n",
       "      <th>Outlet_Identifier_OUT027</th>\n",
       "      <th>Outlet_Identifier_OUT035</th>\n",
       "      <th>Outlet_Identifier_OUT046</th>\n",
       "      <th>Outlet_Identifier_OUT049</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.300</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.442725</td>\n",
       "      <td>2</td>\n",
       "      <td>249.8092</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.920</td>\n",
       "      <td>3</td>\n",
       "      <td>-1.309692</td>\n",
       "      <td>3</td>\n",
       "      <td>48.2692</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>17.500</td>\n",
       "      <td>2</td>\n",
       "      <td>-1.412983</td>\n",
       "      <td>2</td>\n",
       "      <td>141.6180</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19.200</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>2</td>\n",
       "      <td>182.0950</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.930</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.051106</td>\n",
       "      <td>1</td>\n",
       "      <td>53.8614</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8423</th>\n",
       "      <td>6.865</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.054236</td>\n",
       "      <td>2</td>\n",
       "      <td>214.5218</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8424</th>\n",
       "      <td>8.380</td>\n",
       "      <td>3</td>\n",
       "      <td>-0.336739</td>\n",
       "      <td>2</td>\n",
       "      <td>108.1570</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8425</th>\n",
       "      <td>10.600</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.716902</td>\n",
       "      <td>1</td>\n",
       "      <td>85.1224</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8426</th>\n",
       "      <td>7.210</td>\n",
       "      <td>3</td>\n",
       "      <td>1.556591</td>\n",
       "      <td>2</td>\n",
       "      <td>103.1332</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8427</th>\n",
       "      <td>14.800</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.401193</td>\n",
       "      <td>3</td>\n",
       "      <td>75.4670</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8428 rows Ã— 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Item_Weight  Item_Fat_Content  Item_Visibility  Item_Type  Item_MRP  \\\n",
       "0           9.300                 2        -1.442725          2  249.8092   \n",
       "1           5.920                 3        -1.309692          3   48.2692   \n",
       "2          17.500                 2        -1.412983          2  141.6180   \n",
       "3          19.200                 3        -0.051106          2  182.0950   \n",
       "4           8.930                 1        -0.051106          1   53.8614   \n",
       "...           ...               ...              ...        ...       ...   \n",
       "8423        6.865                 2        -0.054236          2  214.5218   \n",
       "8424        8.380                 3        -0.336739          2  108.1570   \n",
       "8425       10.600                 1        -0.716902          1   85.1224   \n",
       "8426        7.210                 3         1.556591          2  103.1332   \n",
       "8427       14.800                 2        -0.401193          3   75.4670   \n",
       "\n",
       "      Outlet_Size  Outlet_Location_Type  Age  Outlet_Type_Grocery Store  \\\n",
       "0               2                     1   22                          0   \n",
       "1               2                     3   12                          0   \n",
       "2               2                     1   22                          0   \n",
       "3               2                     3   23                          1   \n",
       "4               3                     3   34                          0   \n",
       "...           ...                   ...  ...                        ...   \n",
       "8423            3                     3   34                          0   \n",
       "8424            2                     2   19                          0   \n",
       "8425            1                     2   17                          0   \n",
       "8426            2                     3   12                          0   \n",
       "8427            1                     1   24                          0   \n",
       "\n",
       "      Outlet_Type_Supermarket Type1  Outlet_Type_Supermarket Type2  \\\n",
       "0                                 1                              0   \n",
       "1                                 0                              1   \n",
       "2                                 1                              0   \n",
       "3                                 0                              0   \n",
       "4                                 1                              0   \n",
       "...                             ...                            ...   \n",
       "8423                              1                              0   \n",
       "8424                              1                              0   \n",
       "8425                              1                              0   \n",
       "8426                              0                              1   \n",
       "8427                              1                              0   \n",
       "\n",
       "      Outlet_Type_Supermarket Type3  Outlet_Identifier_OUT010  \\\n",
       "0                                 0                         0   \n",
       "1                                 0                         0   \n",
       "2                                 0                         0   \n",
       "3                                 0                         1   \n",
       "4                                 0                         0   \n",
       "...                             ...                       ...   \n",
       "8423                              0                         0   \n",
       "8424                              0                         0   \n",
       "8425                              0                         0   \n",
       "8426                              0                         0   \n",
       "8427                              0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT013  Outlet_Identifier_OUT017  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            1                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         1                         0   \n",
       "8424                         0                         0   \n",
       "8425                         0                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT019  Outlet_Identifier_OUT027  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         0                         0   \n",
       "8425                         0                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         0   \n",
       "\n",
       "      Outlet_Identifier_OUT035  Outlet_Identifier_OUT046  \\\n",
       "0                            0                         0   \n",
       "1                            0                         0   \n",
       "2                            0                         0   \n",
       "3                            0                         0   \n",
       "4                            0                         0   \n",
       "...                        ...                       ...   \n",
       "8423                         0                         0   \n",
       "8424                         0                         0   \n",
       "8425                         1                         0   \n",
       "8426                         0                         0   \n",
       "8427                         0                         1   \n",
       "\n",
       "      Outlet_Identifier_OUT049  \n",
       "0                            1  \n",
       "1                            0  \n",
       "2                            1  \n",
       "3                            0  \n",
       "4                            0  \n",
       "...                        ...  \n",
       "8423                         0  \n",
       "8424                         0  \n",
       "8425                         0  \n",
       "8426                         0  \n",
       "8427                         0  \n",
       "\n",
       "[8428 rows x 20 columns]"
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Xbest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "4075b45c",
   "metadata": {},
   "outputs": [],
   "source": [
    "Xbest_ss=scaler.fit_transform(Xbest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "4ba97075",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_best_df1=df1.drop(columns=['Outlet_Identifier_OUT018','Outlet_Identifier_OUT045'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "ae93f1fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler=StandardScaler()\n",
    "scaled_x_test=scaler.fit_transform(x_best_df1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4b24d89",
   "metadata": {},
   "source": [
    "# The Data to be predicted in Target / Label column is continuous in nature since it is the total value of item Sales from each outlet. Therefore Regression Models will be used."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4bcb5269",
   "metadata": {},
   "source": [
    "# Regression Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "6e5554da",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "402f021a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import r2_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "a4e89196",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best Accuracy is:0.5797398812925499 on random_state:34\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "maxAcc=0\n",
    "maxRS=0\n",
    "for i in range(1,100):\n",
    "    x_train,x_test,y_train,y_test=train_test_split(Xbest_ss,y,test_size=.33,random_state=i)\n",
    "    modRF=RandomForestRegressor()\n",
    "    modRF.fit(x_train,y_train)\n",
    "    pred=modRF.predict(x_test)\n",
    "    acc=r2_score(y_test,pred)\n",
    "    if acc>maxAcc:\n",
    "        maxAcc=acc\n",
    "        maxRS=i\n",
    "print(f\"Best Accuracy is:{maxAcc} on random_state:{maxRS}\")        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "ef60e01b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: xgboost in c:\\users\\sucha\\anaconda3\\lib\\site-packages (1.5.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\sucha\\anaconda3\\lib\\site-packages (from xgboost) (1.20.3)\n",
      "Requirement already satisfied: scipy in c:\\users\\sucha\\anaconda3\\lib\\site-packages (from xgboost) (1.7.1)\n"
     ]
    }
   ],
   "source": [
    "!pip3 install xgboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "536ead56",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test=train_test_split(Xbest_ss,y,test_size=.33,random_state=78)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "9d4e568c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.linear_model import Ridge\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.metrics import r2_score, mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "c8516fb8",
   "metadata": {},
   "outputs": [],
   "source": [
    "rf=RandomForestRegressor()\n",
    "xg=XGBRegressor()\n",
    "sv=SVR()\n",
    "r=Ridge()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56082c21",
   "metadata": {},
   "source": [
    "# TRAINING THE MODELS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "762ed0f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Ridge()"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf.fit(x_train,y_train)\n",
    "xg.fit(x_train,y_train)\n",
    "sv.fit(x_train,y_train)\n",
    "r.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13017125",
   "metadata": {},
   "source": [
    "All models have been trained."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4686d6d",
   "metadata": {},
   "source": [
    "# Ridge Regression Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "b83cd7b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_r_pred=r.predict(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73b4a5a5",
   "metadata": {},
   "source": [
    "# R2_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "33d23057",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5769298611051032"
      ]
     },
     "execution_count": 200,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r2_score(y_test, y_r_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9fc79a9",
   "metadata": {},
   "source": [
    "# Mean squared Error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "1b5b3969",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1234990.703780602"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y_test,y_r_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de75bff5",
   "metadata": {},
   "source": [
    "# Random Forest Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "52064020",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_rf_pred=rf.predict(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f45be023",
   "metadata": {},
   "source": [
    "# R2 SCORE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "c8c550a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5750986831143503"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r2_score(y_test, y_rf_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1e128a7",
   "metadata": {},
   "source": [
    "# mean squared error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "ca1183af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1240336.12428571"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y_test,y_rf_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90d3ee77",
   "metadata": {},
   "source": [
    "# Support Vector REgression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "2d5b713e",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_svr_pred=sv.predict(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a3fe74b",
   "metadata": {},
   "source": [
    "# R2 SCORE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "1d3bd4a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.01424557606179866"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r2_score(y_test, y_svr_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb5fd33a",
   "metadata": {},
   "source": [
    "# mean squared error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "ea88b13d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2877531.2598385"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y_test, y_svr_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd8a69ab",
   "metadata": {},
   "source": [
    "# XGB BOOSTER"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "68a8579a",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_xg_pred=xg.predict(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be6aa0ad",
   "metadata": {},
   "source": [
    "# R2 SCORE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "a77ebcc1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5470844323222794"
      ]
     },
     "execution_count": 209,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r2_score(y_test,y_xg_pred)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21ccef1c",
   "metadata": {},
   "source": [
    "# Mean Squared Error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "50d61cbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1322112.9648633923"
      ]
     },
     "execution_count": 210,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y_test, y_xg_pred)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a53a576a",
   "metadata": {},
   "source": [
    "# Cross Validation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "ae897792",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_score"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38f25670",
   "metadata": {},
   "source": [
    "# Ridge Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "296496f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5580461243748533"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cross_val_score(r,Xbest_ss,y,cv=5).mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef97cd0c",
   "metadata": {},
   "source": [
    "# RANDOM FOREST REGRESSION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "afe8d9aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5486297979157195"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cross_val_score(rf,Xbest_ss,y,cv=5).mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd3673c3",
   "metadata": {},
   "source": [
    "# XGB REGRESSION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "bad25540",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5308848467554654"
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cross_val_score(xg,Xbest_ss,y,cv=5).mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f5a6972",
   "metadata": {},
   "source": [
    "# SV Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "eabb2786",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.04970172826495691"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cross_val_score(sv, Xbest_ss,y,cv=5).mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "294e1bce",
   "metadata": {},
   "source": [
    "# Based on comparing Accuracy Score results with Cross Validation results, it is determined that XGB Regressor is the best model.\n",
    "Hyper Parameter Tuning\n",
    "XGB Regressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "c07bcb08",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "3967292f",
   "metadata": {},
   "outputs": [],
   "source": [
    "parameter = {'booster':[\"gbtree\",\"gblinear\"],'eta': [0.01,0.1,0.2,0.3],'min_child_weight':np.arange(5),'max_depth':[10,20,40,60,80],'subsample':[0.5,1]}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "1de5c90e",
   "metadata": {},
   "outputs": [],
   "source": [
    "GridCV=GridSearchCV(XGBRegressor(),parameter,cv=5,n_jobs= -1, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "ce1e507c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 400 candidates, totalling 2000 fits\n",
      "[16:08:18] WARNING: C:/Users/Administrator/workspace/xgboost-win64_release_1.5.1/src/learner.cc:576: \n",
      "Parameters: { \"max_depth\", \"min_child_weight\", \"subsample\" } might not be used.\n",
      "\n",
      "  This could be a false alarm, with some parameters getting used by language bindings but\n",
      "  then being mistakenly passed down to XGBoost core, or some parameter actually being used\n",
      "  but getting flagged wrongly here. Please open an issue if you find any such cases.\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5,\n",
       "             estimator=XGBRegressor(base_score=None, booster=None,\n",
       "                                    colsample_bylevel=None,\n",
       "                                    colsample_bynode=None,\n",
       "                                    colsample_bytree=None,\n",
       "                                    enable_categorical=False, gamma=None,\n",
       "                                    gpu_id=None, importance_type=None,\n",
       "                                    interaction_constraints=None,\n",
       "                                    learning_rate=None, max_delta_step=None,\n",
       "                                    max_depth=None, min_child_weight=None,\n",
       "                                    missing=nan, monotone_constraints=None,\n",
       "                                    n...\n",
       "                                    num_parallel_tree=None, predictor=None,\n",
       "                                    random_state=None, reg_alpha=None,\n",
       "                                    reg_lambda=None, scale_pos_weight=None,\n",
       "                                    subsample=None, tree_method=None,\n",
       "                                    validate_parameters=None, verbosity=None),\n",
       "             n_jobs=-1,\n",
       "             param_grid={'booster': ['gbtree', 'gblinear'],\n",
       "                         'eta': [0.01, 0.1, 0.2, 0.3],\n",
       "                         'max_depth': [10, 20, 40, 60, 80],\n",
       "                         'min_child_weight': array([0, 1, 2, 3, 4]),\n",
       "                         'subsample': [0.5, 1]},\n",
       "             verbose=1)"
      ]
     },
     "execution_count": 219,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "GridCV.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "1574f2cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'booster': 'gblinear',\n",
       " 'eta': 0.1,\n",
       " 'max_depth': 60,\n",
       " 'min_child_weight': 0,\n",
       " 'subsample': 1}"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "GridCV.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "b64214f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[16:08:18] WARNING: C:/Users/Administrator/workspace/xgboost-win64_release_1.5.1/src/learner.cc:576: \n",
      "Parameters: { \"max_depth\", \"min_child_weight\", \"subsample\" } might not be used.\n",
      "\n",
      "  This could be a false alarm, with some parameters getting used by language bindings but\n",
      "  then being mistakenly passed down to XGBoost core, or some parameter actually being used\n",
      "  but getting flagged wrongly here. Please open an issue if you find any such cases.\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "XGBRegressor(base_score=0.5, booster='gblinear', colsample_bylevel=None,\n",
       "             colsample_bynode=None, colsample_bytree=None,\n",
       "             enable_categorical=False, eta=0.1, gamma=None, gpu_id=-1,\n",
       "             importance_type=None, interaction_constraints=None,\n",
       "             learning_rate=0.5, max_delta_step=None, max_depth=20,\n",
       "             min_child_weight=0, missing=nan, monotone_constraints=None,\n",
       "             n_estimators=100, n_jobs=8, num_parallel_tree=None, predictor=None,\n",
       "             random_state=0, reg_alpha=0, reg_lambda=0, scale_pos_weight=1,\n",
       "             subsample=0.5, tree_method=None, validate_parameters=1,\n",
       "             verbosity=None)"
      ]
     },
     "execution_count": 221,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Best_mod = XGBRegressor(booster = 'gblinear',eta = 0.1, max_depth= 20, min_child_weight = 0,subsample = 0.5)\n",
    "Best_mod.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "2f91cdce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "57.71950877319296\n"
     ]
    }
   ],
   "source": [
    "xgbpred = Best_mod.predict(x_test)\n",
    "\n",
    "acc = r2_score(y_test,xgbpred)\n",
    "print(acc*100)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b02334a7",
   "metadata": {},
   "source": [
    "# Saving The Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "id": "ff1a78b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['BestModelBM.pkl']"
      ]
     },
     "execution_count": 224,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import joblib\n",
    "joblib.dump(Best_mod,\"BestModelBM.pkl\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "76312d1c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "24b78ce1",
   "metadata": {},
   "source": [
    "# Loading The Model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "id": "5637f772",
   "metadata": {},
   "outputs": [],
   "source": [
    "mod=joblib.load('BestModelBM.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "878b083b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1803.5659 1562.083  1795.1295 ... 1726.0248 3551.84   1209.8875]\n"
     ]
    }
   ],
   "source": [
    "print(mod.predict(scaled_x_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ba9ad4e5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "989dbdb2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0960c0a7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
